#!/usr/bin/executor

#требуется IProjectProperties.sbsl
#требуется IIBOperation.sbsl
#требуется prj_xml.sbsl

@Глобально
метод СобратьФайлыКонфигурации(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта, СобратьРасширения: Булево = Ложь, ПересобратьКонфигурациюПоставщика: Булево = Ложь) : Булево

    знч СобранныеПроекты = новый Массив<Строка>()
    пер Статус = 0

    если ПараметрыПроекта.ПутьКФайламКонфигурации.Путь.Пусто()
        возврат Статус < 2
    ;

    если СобратьРасширения
        для Расширение из ПараметрыПроекта.Расширения
            prj_xml.ПеревестиВНовыйФорматConfigDumpInfo(Расширение.Значение.Путь)
        ;
    иначе
        prj_xml.ПеревестиВНовыйФорматConfigDumpInfo(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь)
    ;

    если не СобратьРасширения
        Статус = ПолучитьФайлКонфигурации(
            ПараметрыПроекта,
            ПараметрыПроекта.ПутьКФайламКонфигурации,
            ПересобратьКонфигурациюПоставщика)
        если Статус == 1
            СобранныеПроекты.Добавить(IProjectProperties.ИМЯ_КОНФИГУРАЦИИ)
        ;
    ;

    для Расширение из ПараметрыПроекта.Расширения
        если не СобратьРасширения
            прервать
        ;
        Статус = ПолучитьФайлКонфигурации(
            ПараметрыПроекта,
            Расширение.Значение,
            Ложь)
        если Статус == 1
            СобранныеПроекты.Добавить(Расширение.Ключ)
        ;
    ;

    ВывестиИнформациюПоСобраннымПроектам(СобранныеПроекты)

    возврат Статус < 2
;

@Глобально
метод СобратьПатчКонфигурации(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта): Булево

    знч СобранныеПроекты = новый Массив<Строка>()
    пер Статус = 0

    если ПараметрыПроекта.ПутьКФайламКонфигурации.Путь.Пусто()
        возврат Статус < 2
    ;

    знч СР                  = Файлы.СимволРазделителя
    знч ДанныеДляОбновления = новый Соответствие<Строка,Строка>()

    Статус = ПолучитьПатчКонфигурации(ПараметрыПроекта, ДанныеДляОбновления)
    
    знч ФайлыДляЗагрузки    = новый Файл(ПараметрыПроекта.ПутьКСборкеПроекта + СР + IProjectProperties.ИМЯ_ПАТЧА + "_in")
    ФайлыДляЗагрузки.ОткрытьПотокЗаписи().Записать(ДанныеДляОбновления["ТекстФайлыДляЗагрузки"]).Закрыть()
        
    знч ФайлыДляВыгрузки    = новый Файл(ПараметрыПроекта.ПутьКСборкеПроекта + СР + IProjectProperties.ИМЯ_ПАТЧА + "_out")
    ФайлыДляВыгрузки.ОткрытьПотокЗаписи().Записать(ДанныеДляОбновления["ТекстФайлыДляВыгрузки"]).Закрыть()
    
    СобранныеПроекты.Добавить(IProjectProperties.ИМЯ_ПАТЧА)

    ВывестиИнформациюПоСобраннымПроектам(СобранныеПроекты)
    
    возврат Статус < 2

;

@Глобально
метод ОбновитьФайлыКонфигурации(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта, ЗагрузитьРасширения: Булево = Ложь, ПолучитьКонфигурациюПоставщика: Булево = Ложь) : Булево

    если ПараметрыПроекта.ПараметрыСоединенияИБ.СтрокаСоединения.Пусто()
        Консоль.Записать("Не заполнен путь к ИБ в файле хэша ProjectsHash.json")
        возврат Ложь
    ;

    если ЗагрузитьРасширения
        ЗагрузитьРасширения(ПараметрыПроекта, ПараметрыПроекта.ПараметрыСоединенияИБ)
    иначе
        ЗагрузитьПатчКонфигурации(ПараметрыПроекта, ПараметрыПроекта.ПараметрыСоединенияИБ, ПолучитьКонфигурациюПоставщика)
    ;

    возврат Истина
;

метод ПолучитьФайлКонфигурации(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта, ПутьКФайламПроекта: IProjectProperties.ПутьКФайламПроекта, ПересобратьКонфигурациюПоставщика: Булево = Ложь): Число

    пер Результат = 0
    знч СР = Файлы.СимволРазделителя
    знч ИсполняемыйФайлПлатформы     = ПараметрыПроекта.ИсполняемыйФайлПлатформы
    знч ИспользуетсяАвтономныйСервер = ПараметрыПроекта.ИспользуетсяАвтономныйСервер
    знч РасширениеФайлаСборки        = ПутьКФайламПроекта.ЭтоРасширение ? "cfe" : "cf"
    знч ПутьКФайлуСборки             = ПараметрыПроекта.ПутьКСборкеПроекта + СР + (ПутьКФайламПроекта.ЭтоРасширение ? "%{ПутьКФайламПроекта.Имя}.%{РасширениеФайлаСборки}" : "1Cv8.%{РасширениеФайлаСборки}")
    знч ПутьВременнойБазы            = Файлы.СоздатьВременныйКаталог().Путь

    пер ХешПроекта = IProjectProperties.РассчитатьХешКаталога(ПутьКФайламПроекта.Путь)
    если не ПересобратьКонфигурациюПоставщика и ХешПроекта == ПутьКФайламПроекта.Хеш
        // расширение не изменилось, сборку файла расширения cfe не делаем
        возврат Результат
    ;

    попытка
            
        если ПересобратьКонфигурациюПоставщика
            
            знч ПутьВременнойБазыПоставщика = Файлы.СоздатьВременныйКаталог().Путь
            знч ПутьВременнойВыгрузки = Файлы.СоздатьВременныйКаталог().Путь
            знч ФайлКонфигурации = prj_xml.ПолучитьФайлПоставщика(ПутьКФайламПроекта.Путь)
            
            Консоль.Записать("\нCreateInfobase:")
            IIBOperation.СоздатьИнформационнуюБазу(
                ПутьВременнойБазыПоставщика,
                ИсполняемыйФайлПлатформы,
                ИспользуетсяАвтономныйСервер)
            
            Консоль.Записать("\нLoadFromFile:")
             IIBOperation.ЗагрузитьКонфигурацию(
                ФайлКонфигурации.Путь,
                ПутьВременнойБазыПоставщика,
                ИсполняемыйФайлПлатформы,
                ИспользуетсяАвтономныйСервер,
                "",
                "",
                ПутьКФайламПроекта.Имя)
            
            Консоль.Записать("\нDumpFiles:")
             IIBOperation.ВыгрузитьФайлыКонфигурации(
                ПутьВременнойВыгрузки,
                ПутьВременнойБазыПоставщика,
                ИсполняемыйФайлПлатформы,
                ИспользуетсяАвтономныйСервер,
                "",
                "",
                ПутьКФайламПроекта.Имя)

            Файлы.Удалить(ПутьВременнойБазыПоставщика)
            Консоль.Записать("ИБ поставщика удалена\н")
            
            Консоль.Записать("\нCreateInfobase:")
             IIBOperation.СоздатьИнформационнуюБазу(
                ПутьВременнойБазыПоставщика,
                ИсполняемыйФайлПлатформы,
                ИспользуетсяАвтономныйСервер)
            
            Консоль.Записать("\нLoadFromFiles:")
             IIBOperation.ЗагрузитьФайлыКонфигурации(
                ПутьВременнойВыгрузки,
                ПутьВременнойБазыПоставщика,
                ИсполняемыйФайлПлатформы,
                ИспользуетсяАвтономныйСервер,
                "",
                "",
                ПутьКФайламПроекта.Имя)
            
            знч ФайлыПоИзмененнымОбъектам = ПолучитьФайлыПоИзмененнымОбъектам(ПараметрыПроекта, ПутьКФайламПроекта)

            для ДанныеОбъекта из ФайлыПоИзмененнымОбъектам
                если ДанныеОбъекта.Ключ == "ДанныеФайлаИзменений"
                    продолжить
                ;
    
                знч ОсновнойФайл        = новый Файл(ДанныеОбъекта.Значение.Получить("ПутьКОсновномуФайлу"))
                знч ОсновнойФайлТемп    = новый Файл(ПутьВременнойВыгрузки + СР + ОсновнойФайл.Путь.Заменить(ПутьКФайламПроекта.Путь, ""))

                если ОсновнойФайлТемп.Существует()
                    Файлы.Удалить(ОсновнойФайлТемп)
                ;
                Файлы.Скопировать(ОсновнойФайл, ОсновнойФайлТемп)

                знч ПутьКОсновномуКаталогу = ДанныеОбъекта.Значение.Получить("ПутьКОсновномуКаталогу")
                если не ПутьКОсновномуКаталогу.Пусто()
                    знч ОсновнойКаталог     = новый Файл(ПутьКОсновномуКаталогу)
                    знч ОсновнойКаталогТемп = новый Файл(ПутьВременнойВыгрузки + СР + ОсновнойКаталог.Путь.Заменить(ПутьКФайламПроекта.Путь, ""))
                    если ОсновнойКаталогТемп.Существует()
                        Файлы.Удалить(ОсновнойКаталогТемп)
                    ;
                    Файлы.Скопировать(ПутьКОсновномуКаталогу, ОсновнойКаталогТемп)
                ;
            ;
            
            Консоль.Записать("\нDump:")
            Файлы.СоздатьКаталог("%{ПутьВременнойВыгрузки}%{СР}Ext%{СР}ParentConfigurations")
            IIBOperation.ВыгрузитьКонфигурацию(
                "%{ПутьВременнойВыгрузки}%{СР}Ext%{СР}ParentConfigurations%{СР}%{ФайлКонфигурации.Имя}",
                ПутьВременнойБазыПоставщика,
                ИсполняемыйФайлПлатформы,
                ИспользуетсяАвтономныйСервер,
                "",
                "",
                ПутьКФайламПроекта.Имя)

            Файлы.Удалить(ПутьВременнойБазыПоставщика)
            Консоль.Записать("ИБ поставщика удалена\н")

            Файлы.Удалить(ПутьКФайламПроекта.Путь)
            Файлы.СоздатьКаталог(ПутьКФайламПроекта.Путь)
            Файлы.Скопировать(ПутьВременнойВыгрузки, ПутьКФайламПроекта.Путь)
            
            Файлы.Удалить(ПутьВременнойВыгрузки)
            Консоль.Записать("Выгрузка поставщика удалена\н")
        ;

        Консоль.Записать("\нCreateInfobase:")
        IIBOperation.СоздатьИнформационнуюБазу(
            ПутьВременнойБазы,
            ИсполняемыйФайлПлатформы,
            ИспользуетсяАвтономныйСервер)

        пер МаксимальноеЧислоПопыток  = ПутьКФайламПроекта.ЭтоРасширение ? 4 : 1
        пер ВременныйХешПроектаДо     = ХешПроекта
        пер ВременныйХешПроектаПосле  = ХешПроекта
        пер ВременныйХешПроектаЧетный = ХешПроекта

        для ЧислоПопыток = 1 по МаксимальноеЧислоПопыток

            ВременныйХешПроектаДо = ВременныйХешПроектаПосле   

            Консоль.Записать("\нLoadFromFiles:")
            IIBOperation.ЗагрузитьФайлыКонфигурации(
                ПутьКФайламПроекта.Путь,
                ПутьВременнойБазы,
                ИсполняемыйФайлПлатформы,
                ИспользуетсяАвтономныйСервер,
                "",
                "",
                ПутьКФайламПроекта.Имя)

            Консоль.Записать("\нDumpFiles:")
            Файлы.Удалить(ПутьКФайламПроекта.Путь)
            Файлы.СоздатьКаталог(ПутьКФайламПроекта.Путь)

            IIBOperation.ВыгрузитьФайлыКонфигурации(
                ПутьКФайламПроекта.Путь,
                ПутьВременнойБазы,
                ИсполняемыйФайлПлатформы,
                ИспользуетсяАвтономныйСервер,
                "",
                "",
                ПутьКФайламПроекта.Имя)

            prj_xml.ПеревестиВНовыйФорматConfigDumpInfo(ПутьКФайламПроекта.Путь)
            если не ПутьКФайламПроекта.ЭтоРасширение
                prj_xml.ПеревестиВНовыйФорматParentConfigurations(ПутьКФайламПроекта.Путь)
            ;

            ВременныйХешПроектаПосле = IProjectProperties.РассчитатьХешКаталога(ПутьКФайламПроекта.Путь)

            если не ПутьКФайламПроекта.ЭтоРасширение или ВременныйХешПроектаПосле == ВременныйХешПроектаДо
                или ВременныйХешПроектаПосле == ВременныйХешПроектаЧетный
                // Вторая проврека нужна из-за ошибки выгрузки ролей в расширениях
                ХешПроекта = ВременныйХешПроектаПосле
                прервать
            иначе
                Консоль.Записать("\н*****************************************************************")
                Консоль.Записать("Повторная выгрузка репозитория")
                Консоль.Записать("*****************************************************************")
            ;

            если ЧислоПопыток % 2 == 0
                ВременныйХешПроектаЧетный = ВременныйХешПроектаПосле
            ;
        ;

        если ПутьКФайламПроекта.ЭтоРасширение
            и не ВременныйХешПроектаПосле == ВременныйХешПроектаДо
            и не ВременныйХешПроектаПосле == ВременныйХешПроектаЧетный
            выбросить новый ИсключениеНедопустимоеСостояние("Ошибка выгрузки проекта")
        ;

        Консоль.Записать("\нDump:")
        IIBOperation.ВыгрузитьКонфигурацию(
            ПутьКФайлуСборки,
            ПутьВременнойБазы,
            ИсполняемыйФайлПлатформы,
            ИспользуетсяАвтономныйСервер,
            "",
            "",
            ПутьКФайламПроекта.Имя)
        
        Результат = 1
        ПутьКФайламПроекта.Хеш = ХешПроекта

    поймать Исключение: Исключение
        если не Исключение.Описание.Пусто()
            Консоль.Записать("\н#################################################################")
            Консоль.Записать(Исключение.Описание)
            Консоль.Записать("#################################################################")
        ;
        Результат = 2
    ;  
    
    Файлы.Удалить(ПутьВременнойБазы)
    Консоль.Записать("Временная ИБ удалена\н")

    возврат Результат
;

метод ПолучитьПатчКонфигурации(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта, ДанныеДляОбновления: Соответствие<Строка, Строка>) : Число

    пер Результат = 0
    знч СР = Файлы.СимволРазделителя
    знч ПутьККаталогуСборки = новый Файл(ПараметрыПроекта.ПутьКСборкеПроекта + СР + IProjectProperties.ИМЯ_ПАТЧА)
    если ПутьККаталогуСборки.Существует()
        Файлы.Удалить(ПутьККаталогуСборки, Истина)
    ;

    пер ТекстФайлыДляЗагрузки = ""
    пер ТекстФайлыДляВыгрузки = ""
    
    попытка

        знч ФайлыПоИзмененнымОбъектам = ПолучитьФайлыПоИзмененнымОбъектам(ПараметрыПроекта, ПараметрыПроекта.ПутьКФайламКонфигурации)

        для ДанныеОбъекта из ФайлыПоИзмененнымОбъектам
            если ДанныеОбъекта.Ключ == "ДанныеФайлаИзменений"
                продолжить
            ;

            знч ОсновнойФайл        = новый Файл(ДанныеОбъекта.Значение.Получить("ПутьКОсновномуФайлу"))
            знч ОсновнойФайлТемп    = новый Файл(ПутьККаталогуСборки.Путь + СР + ОсновнойФайл.Путь.Заменить(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь, ""))

            если ОсновнойФайлТемп.Существует()
                Файлы.Удалить(ОсновнойФайлТемп)
            ;
            Файлы.Скопировать(ОсновнойФайл, ОсновнойФайлТемп)
            если ОсновнойФайл.Имя == "Configuration.xml"
                знч ФайлConfigDumpInfo = новый Файл(ОсновнойФайл.Путь.Заменить("Configuration.xml", "ConfigDumpInfo.xml"))
                знч ФайлConfigDumpInfoТемп = новый Файл(ОсновнойФайлТемп.Путь.Заменить("Configuration.xml", "ConfigDumpInfo.xml"))
                Файлы.Скопировать(ФайлConfigDumpInfo, ФайлConfigDumpInfoТемп)
            ;

            знч ПутьКОсновномуКаталогу = ДанныеОбъекта.Значение.Получить("ПутьКОсновномуКаталогу")
            если не ПутьКОсновномуКаталогу.Пусто()
                знч ОсновнойКаталог     = новый Файл(ПутьКОсновномуКаталогу)
                знч ОсновнойКаталогТемп = новый Файл(ПутьККаталогуСборки.Путь + СР + ОсновнойКаталог.Путь.Заменить(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь, ""))
                если ОсновнойКаталогТемп.Существует()
                    Файлы.Удалить(ОсновнойКаталогТемп)
                ;
                Файлы.Скопировать(ПутьКОсновномуКаталогу, ОсновнойКаталогТемп)
                если ОсновнойФайл.Имя == "Configuration.xml"
                    знч ФайлКонфигурации = prj_xml.ПолучитьФайлПоставщика(ПутьККаталогуСборки.Путь)
                    Файлы.Удалить(ФайлКонфигурации)
                ;
            ;

            ТекстФайлыДляЗагрузки = ТекстФайлыДляЗагрузки + ОсновнойФайлТемп.Путь + Символы.НОВАЯ_СТРОКА
            если ДанныеОбъекта.Ключ.НачинаетсяС("Configuration")
                ТекстФайлыДляЗагрузки = ТекстФайлыДляЗагрузки + ПутьККаталогуСборки + СР + "Ext" + СР + "ParentConfigurations.bin" + Символы.НОВАЯ_СТРОКА
                ТекстФайлыДляВыгрузки = ТекстФайлыДляВыгрузки + ДанныеОбъекта.Ключ + ".ParentConfigurations" + Символы.НОВАЯ_СТРОКА
            ;
        ;

        Результат = 1

    поймать Исключение: Исключение
        если не Исключение.Описание.Пусто()
            Консоль.Записать("\н#################################################################")
            Консоль.Записать(Исключение.Описание)
            Консоль.Записать("#################################################################")
        ;
        Результат = 2
    ;

    ДанныеДляОбновления.Вставить("ТекстФайлыДляЗагрузки", ТекстФайлыДляЗагрузки)
    ДанныеДляОбновления.Вставить("ТекстФайлыДляВыгрузки", ТекстФайлыДляВыгрузки)

    возврат Результат
;

@Глобально
метод ЗагрузитьРасширения(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта, ПараметрыСоединенияИБ: IProjectProperties.ПараметрыСоединенияИБ)

    знч СР = Файлы.СимволРазделителя

    для Расширение из ПараметрыПроекта.Расширения
        знч ФайлДляЗагрузки  = новый Файл(ПараметрыПроекта.ПутьКСборкеПроекта + СР + Расширение.Ключ + ".cfe")
        если не ФайлДляЗагрузки.Существует()
            Консоль.Записать(ФайлДляЗагрузки.Путь)
            продолжить
        ;
        IIBOperation.ЗагрузитьКонфигурацию(ФайлДляЗагрузки.Путь,
            ПараметрыСоединенияИБ.СтрокаСоединения,
            ПараметрыПроекта.ИсполняемыйФайлПлатформы,
            ПараметрыПроекта.ИспользуетсяАвтономныйСервер,
            ПараметрыСоединенияИБ.Логин,
            ПараметрыСоединенияИБ.Пароль,
            Расширение.Ключ)
    ;

;

@Глобально
метод ЗагрузитьПатчКонфигурации(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта, ПараметрыСоединенияИБ: IProjectProperties.ПараметрыСоединенияИБ, ПолучитьКонфигурациюПоставщика = Ложь)

    знч СР = Файлы.СимволРазделителя
    
    знч КаталогДляЗагрузки  = новый Файл(ПараметрыПроекта.ПутьКСборкеПроекта + СР + IProjectProperties.ИМЯ_ПАТЧА)
    знч ФайлыДляЗагрузки    = новый Файл(ПараметрыПроекта.ПутьКСборкеПроекта + СР + IProjectProperties.ИМЯ_ПАТЧА + "_in")
    знч ФайлыДляВыгрузки    = новый Файл(ПараметрыПроекта.ПутьКСборкеПроекта + СР + IProjectProperties.ИМЯ_ПАТЧА + "_out")

    если не КаталогДляЗагрузки.Существует()
        или не ФайлыДляЗагрузки.Существует()
        или не ФайлыДляВыгрузки.Существует()
        возврат
    ;

    знч КаталогДляВыгрузки  = Файлы.СоздатьВременныйКаталог()

    пер ПутьКФайлуПоставщика = prj_xml.ПолучитьФайлПоставщика(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь)
    пер ПутьКФайлуПоставщикаЗагрузки = ""

    если (ПутьКФайлуПоставщика.Путь.Пусто()
        или ПолучитьКонфигурациюПоставщика)
        IIBOperation.ВыгрузитьФайлыКонфигурации(КаталогДляВыгрузки.Путь,
            ПараметрыСоединенияИБ.СтрокаСоединения,
            ПараметрыПроекта.ИсполняемыйФайлПлатформы,
            ПараметрыПроекта.ИспользуетсяАвтономныйСервер,
            ПараметрыСоединенияИБ.Логин,
            ПараметрыСоединенияИБ.Пароль,
            "",
            Ложь,
            ФайлыДляВыгрузки)
        ПутьКФайлуПоставщика = prj_xml.ПолучитьФайлПоставщика(КаталогДляВыгрузки.Путь)
        ПутьКФайлуПоставщикаЗагрузки = ПутьКФайлуПоставщика.Путь.Заменить(КаталогДляВыгрузки.Путь, КаталогДляЗагрузки.Путь)
    иначе
        ПутьКФайлуПоставщикаЗагрузки = ПутьКФайлуПоставщика.Путь.Заменить(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь, КаталогДляЗагрузки.Путь)
    ;
    Файлы.Скопировать(ПутьКФайлуПоставщика, ПутьКФайлуПоставщикаЗагрузки)

    Консоль.Записать("\нLoadFromFiles:")
    IIBOperation.ЗагрузитьФайлыКонфигурации(КаталогДляЗагрузки.Путь,
        ПараметрыСоединенияИБ.СтрокаСоединения,
        ПараметрыПроекта.ИсполняемыйФайлПлатформы,
        ПараметрыПроекта.ИспользуетсяАвтономныйСервер,
        ПараметрыСоединенияИБ.Логин,
        ПараметрыСоединенияИБ.Пароль,
        "",
        ФайлыДляЗагрузки)

    Консоль.Записать("\нCompareCfg:")
    IIBOperation.СравнитьКонфигурации(ПараметрыПроекта.ПутьКСборкеПроекта + СР + "ИзмененияВКонфигурации.mxl",
        ПараметрыСоединенияИБ.СтрокаСоединения,
        ПараметрыПроекта.ИсполняемыйФайлПлатформы,
        ПараметрыСоединенияИБ.Логин,
        ПараметрыСоединенияИБ.Пароль)

    Файлы.Удалить(КаталогДляВыгрузки, Истина)    
    Файлы.Удалить(ПутьКФайлуПоставщикаЗагрузки, Истина)

;

@Глобально
метод ПеревестиФайлИзмененныхОбъектовВНовыйФормат(ПутьКФайламПроекта: Строка) : Булево

    возврат prj_xml.ПеревестиВНовыйФорматParentConfigurations(ПутьКФайламПроекта)
;

@Глобально
метод ПеревестиФайлИсторииОбъектовВНовыйФормат(ПутьКФайламПроекта: Строка) : Булево

    возврат prj_xml.ПеревестиВНовыйФорматConfigDumpInfo(ПутьКФайламПроекта)
;

@Глобально
метод АнализироватьСписокИзмененныхОбъектов(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта, РежимАнализа = 0) : Булево

    знч СР              = Файлы.СимволРазделителя
    знч ФайлИзменений   = prj_xml.ПолучитьФайлParentConfigurations(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь)
    знч ДанныеИзменения = ФайлИзменений.ОткрытьПотокЧтения().ПрочитатьКакСтроку().Разделить("," + Символы.НОВАЯ_СТРОКА,Истина)
    
    знч ИсправленныеДанныеИзменения = новый Массив<Строка>()

    знч КоличествоДанныхИзменения = ДанныеИзменения.Размер()
    знч Граница = КоличествоДанныхИзменения - 15
    пер Индекс  = 0

    знч ФайлConfigDumpInfo = prj_xml.ПолучитьФайлConfigDumpInfo(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь)
    если не ФайлConfigDumpInfo.Существует()
        ПолучитьФайлИсторииИзменений(ПараметрыПроекта)
    ;
    если РежимАнализа > 0
        ПолучитьФайлИсторииИзменений(ПараметрыПроекта, Истина)
    ;
    знч ДанныеConfigDumpInfo     = prj_xml.ПрочитатьConfigDumpInfo(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь)
    знч ДанныеConfigDumpInfoProd = prj_xml.ПрочитатьConfigDumpInfo(ПараметрыПроекта.ПутьКСборкеПроекта)

    пока Истина
        если Индекс <= 9
            ИсправленныеДанныеИзменения.Добавить(ДанныеИзменения[Индекс])
        иначе если Индекс >= Граница
            ИсправленныеДанныеИзменения.Добавить(ДанныеИзменения[Индекс])
        иначе если (Индекс - 10)%4 > 0
            // ни чего не выполняем
        иначе если не ДанныеConfigDumpInfo.СодержитКлюч(ДанныеИзменения[Индекс + 2])
            если РежимАнализа > 0 и ДанныеConfigDumpInfoProd.СодержитКлюч(ДанныеИзменения[Индекс + 3])
                Консоль.Записать("\н*****************************************************************")
                Консоль.Записать("Ошибка идентификаторов bin")
                Консоль.Записать(ДанныеИзменения[Индекс + 2] + "," + ДанныеИзменения[Индекс + 3])
                Консоль.Записать("*****************************************************************")
            ;
        иначе если не ДанныеИзменения[Индекс + 2] == ДанныеИзменения[Индекс + 3]
            знч ИмяОБъекта = ДанныеConfigDumpInfo[ДанныеИзменения[Индекс + 2]]["Имя"] как Строка
            Консоль.Записать(ИмяОБъекта)
            Консоль.Записать(ДанныеИзменения[Индекс + 2] + "," + ДанныеИзменения[Индекс + 3])
            ИсправленныеДанныеИзменения.Добавить(ДанныеИзменения[Индекс])
            ИсправленныеДанныеИзменения.Добавить(ДанныеИзменения[Индекс + 1])
            ИсправленныеДанныеИзменения.Добавить(ДанныеИзменения[Индекс + 2])
            ИсправленныеДанныеИзменения.Добавить(ДанныеИзменения[Индекс + 3])
        иначе если ДанныеИзменения[Индекс] == "1" или ДанныеИзменения[Индекс + 1] == "1"
            знч ДанныеОБъекта = ДанныеConfigDumpInfo[ДанныеИзменения[Индекс + 2]]
            знч ИмяОбъекта = ДанныеОБъекта["Имя"] как Строка
            Консоль.Записать(ИмяОбъекта)
            Консоль.Записать(ДанныеИзменения[Индекс] + "," + ДанныеИзменения[Индекс + 1] + "," + ДанныеИзменения[Индекс + 2] + "," + ДанныеИзменения[Индекс + 3])
            ИсправленныеДанныеИзменения.Добавить(ДанныеИзменения[Индекс])
            ИсправленныеДанныеИзменения.Добавить(ДанныеИзменения[Индекс + 1])
            ИсправленныеДанныеИзменения.Добавить(ДанныеИзменения[Индекс + 2])
            ИсправленныеДанныеИзменения.Добавить(ДанныеИзменения[Индекс + 3])
        иначе
            ИсправленныеДанныеИзменения.Добавить(ДанныеИзменения[Индекс])
            ИсправленныеДанныеИзменения.Добавить(ДанныеИзменения[Индекс + 1])
            ИсправленныеДанныеИзменения.Добавить(ДанныеИзменения[Индекс + 2])
            ИсправленныеДанныеИзменения.Добавить(ДанныеИзменения[Индекс + 3])
        ;
        Индекс += 1
        если Индекс == КоличествоДанныхИзменения
            прервать
        ;
    ;
   
    если РежимАнализа > 1
        и не ИсправленныеДанныеИзменения.Размер() == КоличествоДанныхИзменения
        ФайлИзменений.ОткрытьПотокЗаписи(Ложь).Записать(Байты{EF BB BF}).Записать(Строки.Соединить(ИсправленныеДанныеИзменения, "," + Символы.НОВАЯ_СТРОКА)).Закрыть()
        Консоль.Записать("\нИзменен файл идентификаторов bin")
    ;

    если РежимАнализа > 0
        Файлы.Удалить("%{ПараметрыПроекта.ПутьКСборкеПроекта}%{СР}ConfigDumpInfo.xml", Истина)
    ;

    возврат Истина 
;

@Глобально
метод ПолучитьФайлыПоИзмененнымОбъектам(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта, ПутьКФайламПроекта: IProjectProperties.ПутьКФайламПроекта) : Соответствие<Строка, Соответствие<Строка, Строка>>

    prj_xml.ПеревестиВНовыйФорматParentConfigurations(ПутьКФайламПроекта.Путь)

    знч ФайлИзменений = prj_xml.ПолучитьФайлParentConfigurations(ПутьКФайламПроекта.Путь)
    знч ДанныеИзменения = ФайлИзменений.ОткрытьПотокЧтения().ПрочитатьКакСтроку().Разделить("," + Символы.НОВАЯ_СТРОКА,Истина)
    
    знч РасширенныеДанныеИзменения  = новый Массив<Строка>()
    знч ГУИДОбъектовСнятые          = новый Соответствие<Строка, Строка>()
    знч ГУИДОбъектовПоставщика      = новый Соответствие<Строка, Строка>()
    знч ФайлыПоИзмененнымОбъектам   = новый Соответствие<Строка, Соответствие<Строка, Строка>>()

    знч КоличествоДанныхИзменения = ДанныеИзменения.Размер()
    знч Граница = КоличествоДанныхИзменения - 15
    пер Индекс  = 0

    знч ФайлConfigDumpInfo = prj_xml.ПолучитьФайлConfigDumpInfo(ПутьКФайламПроекта.Путь)
    если не ФайлConfigDumpInfo.Существует()
        ПолучитьФайлИсторииИзменений(ПараметрыПроекта)
    ;

    знч ДанныеConfigDumpInfo = prj_xml.ПрочитатьConfigDumpInfo(ПутьКФайламПроекта.Путь)

    пока Истина
        если Индекс <= 9
            // ни чего не выполняем
        иначе если Индекс >= Граница
            // ни чего не выполняем
        иначе если (Индекс - 10)%4 > 0
            // ни чего не выполняем
        иначе если не ДанныеConfigDumpInfo.СодержитКлюч(ДанныеИзменения[Индекс + 2])
            // ни чего не выполняем
        иначе если ДанныеИзменения[Индекс] == "1" или ДанныеИзменения[Индекс + 1] == "1"
            знч ДанныеОБъекта = ДанныеConfigDumpInfo[ДанныеИзменения[Индекс + 2]]
            пер ИмяОбъекта = ДанныеОБъекта["Имя"] как Строка
            Консоль.Записать(ИмяОбъекта)
            Консоль.Записать(ДанныеИзменения[Индекс] + "," + ДанныеИзменения[Индекс + 1] + "," + ДанныеИзменения[Индекс + 2] + "," + ДанныеИзменения[Индекс + 3])
            знч ЗаполненГУИДРодителя = не (ДанныеОБъекта["ГУИДРодителя"] как Строка).Пусто()
            знч ФайлыОбъекта = prj_xml.ПолучитьФайлыОбъектаМетаданных(ПутьКФайламПроекта.Путь, ИмяОбъекта, ЗаполненГУИДРодителя)
            если ЗаполненГУИДРодителя
                знч СоставИмяОбъекта = ИмяОбъекта.Разделить(".")
                ИмяОбъекта = СоставИмяОбъекта[0] + "." + СоставИмяОбъекта[1]
            ;
            ФайлыПоИзмененнымОбъектам.ВставитьЕслиОтсутствует(ИмяОбъекта, ФайлыОбъекта)
            если (ДанныеОБъекта["ГУИДРодителя"] как Строка).Пусто()
                ГУИДОбъектовСнятые.ВставитьЕслиОтсутствует(ДанныеОБъекта["ГУИД"] как Строка, "")
            иначе
                ГУИДОбъектовСнятые.ВставитьЕслиОтсутствует(ДанныеОБъекта["ГУИДРодителя"] как Строка, "")
            ;
            ГУИДОбъектовПоставщика.ВставитьЕслиОтсутствует(ДанныеИзменения[Индекс + 2], "")
        иначе
            ГУИДОбъектовПоставщика.ВставитьЕслиОтсутствует(ДанныеИзменения[Индекс + 2], "")
        ;
        Индекс += 1
        если Индекс == КоличествоДанныхИзменения
            прервать
        ;
    ;

    Индекс = 0
   
    пока Истина
        если Индекс <= 9
            РасширенныеДанныеИзменения.Добавить(ДанныеИзменения[Индекс])
        иначе если Индекс >= Граница
            РасширенныеДанныеИзменения.Добавить(ДанныеИзменения[Индекс])
        иначе если (Индекс - 10)%4 > 0
            // ни чего не выполняем
        иначе
            если ГУИДОбъектовСнятые.СодержитКлюч(ДанныеИзменения[Индекс + 2])
                РасширенныеДанныеИзменения.Добавить("1")
            иначе
                РасширенныеДанныеИзменения.Добавить(ДанныеИзменения[Индекс])
            ;
            РасширенныеДанныеИзменения.Добавить(ДанныеИзменения[Индекс + 1])
            РасширенныеДанныеИзменения.Добавить(ДанныеИзменения[Индекс + 2])
            РасширенныеДанныеИзменения.Добавить(ДанныеИзменения[Индекс + 3])
        ;
        Индекс += 1
        если Индекс == КоличествоДанныхИзменения
            прервать
        ;
    ;

    для ОбъектКонфигурации из ДанныеConfigDumpInfo
        знч ДанныеОБъекта = ОбъектКонфигурации.Значение
        если не (ДанныеОБъекта["ГУИДРодителя"] как Строка).Пусто()
            продолжить
        ;
        если не ГУИДОбъектовПоставщика.СодержитКлюч((ДанныеОБъекта["ГУИД"] как Строка))
            знч ИмяОбъекта = (ДанныеОБъекта["Имя"] как Строка)
            Консоль.Записать(ИмяОбъекта)
            Консоль.Записать("Объект не на поддержке")
            знч ФайлыОбъекта = prj_xml.ПолучитьФайлыОбъектаМетаданных(ПутьКФайламПроекта.Путь, ИмяОбъекта)
            ФайлыПоИзмененнымОбъектам.ВставитьЕслиОтсутствует(ИмяОбъекта, ФайлыОбъекта)
        ;
    ;

    знч ДанныеФайлаИзменений = новый Соответствие<Строка, Строка>()
    ДанныеФайлаИзменений.Вставить("ФайлИзменений", Строки.Соединить(ДанныеИзменения, "," + Символы.НОВАЯ_СТРОКА))
    ДанныеФайлаИзменений.Вставить("РасширенныйФайлИзменений", Строки.Соединить(РасширенныеДанныеИзменения, "," + Символы.НОВАЯ_СТРОКА))

    ФайлыПоИзмененнымОбъектам.Вставить("ДанныеФайлаИзменений", ДанныеФайлаИзменений)

    возврат ФайлыПоИзмененнымОбъектам 
;

@Глобально
метод ПолучитьФайлИсторииИзменений(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта, ДляКонфигурацииПоставщика = Ложь) : Булево

    если ДляКонфигурацииПоставщика

        знч ПутьВременнойБазыПоставщика = Файлы.СоздатьВременныйКаталог().Путь
        знч ПутьКФайлуПоставщика = prj_xml.ПолучитьФайлПоставщика(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь)
       
        Консоль.Записать("\нCreateInfobase:")
        IIBOperation.СоздатьИнформационнуюБазу(ПутьВременнойБазыПоставщика,
            ПараметрыПроекта.ИсполняемыйФайлПлатформы,
            ПараметрыПроекта.ИспользуетсяАвтономныйСервер)
        
        Консоль.Записать("\нLoadFromFile:")
        IIBOperation.ЗагрузитьКонфигурацию(ПутьКФайлуПоставщика.Путь,
            ПутьВременнойБазыПоставщика,
            ПараметрыПроекта.ИсполняемыйФайлПлатформы,
            ПараметрыПроекта.ИспользуетсяАвтономныйСервер,
            "",
            "",
            "")

        Консоль.Записать("\нDumpFiles:")
        IIBOperation.ВыгрузитьФайлыКонфигурации(ПараметрыПроекта.ПутьКСборкеПроекта,
            ПутьВременнойБазыПоставщика,
            ПараметрыПроекта.ИсполняемыйФайлПлатформы,
            ПараметрыПроекта.ИспользуетсяАвтономныйСервер,
            "",
            "",
            "",
            Истина)

        Файлы.Удалить(ПутьВременнойБазыПоставщика)
        Консоль.Записать("ИБ поставщика удалена\н")

    иначе

        если ПараметрыПроекта.ПараметрыСоединенияИБ.СтрокаСоединения.Пусто()
          Консоль.Записать("Не заполнен путь к ИБ в файле хэша ProjectsHash.json")
          возврат Ложь
        ;

        Консоль.Записать("\нDumpFiles(Config dump info):")
        IIBOperation.ВыгрузитьФайлыКонфигурации(
            ПараметрыПроекта.ПутьКФайламКонфигурации.Путь,
            ПараметрыПроекта.ПараметрыСоединенияИБ.СтрокаСоединения,
            ПараметрыПроекта.ИсполняемыйФайлПлатформы,
            ПараметрыПроекта.ИспользуетсяАвтономныйСервер,
            ПараметрыПроекта.ПараметрыСоединенияИБ.Логин,
            ПараметрыПроекта.ПараметрыСоединенияИБ.Пароль,
            "",
            Истина)
    ;

    возврат Истина
;

@Локально
метод ВывестиИнформациюПоСобраннымПроектам(СобранныеПроекты: Массив<Строка>)
    
    если не СобранныеПроекты.Пусто()
        Консоль.Записать("Собраны проекты:")
    ;

    для ИмяПроекта из СобранныеПроекты
        Консоль.Записать(ИмяПроекта)
    ;

;