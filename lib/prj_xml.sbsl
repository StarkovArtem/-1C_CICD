#!/usr/bin/executor

@Глобально
метод ПеревестиВНовыйФорматParentConfigurations(ПутьКФайламПроекта: Строка) : Булево

    знч СР = Файлы.СимволРазделителя
    знч ФайлИзменений   = ПолучитьФайлParentConfigurations(ПутьКФайламПроекта)
    пер ДанныеИзменения = ФайлИзменений.ОткрытьПотокЧтения().ПрочитатьКакСтроку()

    если ДанныеИзменения.Содержит(Символы.НОВАЯ_СТРОКА)
        возврат Истина
    ;
    ДанныеИзменения = ДанныеИзменения.Заменить(",", "," + Символы.НОВАЯ_СТРОКА)

    ФайлИзменений.ОткрытьПотокЗаписи(Ложь).Записать(Байты{EF BB BF}).Записать(ДанныеИзменения).Закрыть()
    Консоль.Записать("\нИзменен файл %{ПутьКФайламПроекта}%{СР}Ext%{СР}ParentConfigurations.bin")

    возврат Истина
;

@Глобально
метод ПеревестиВНовыйФорматConfigDumpInfo(ПутьКФайламПроекта: Строка) : Булево

    знч СР              = Файлы.СимволРазделителя
    знч ФайлИзменений   = ПолучитьФайлConfigDumpInfo(ПутьКФайламПроекта)
    если не ФайлИзменений.Существует()
        возврат Истина
    ;
    пер ДанныеИзменения = ФайлИзменений.ОткрытьПотокЧтения().ПрочитатьКакСтроку()
    знч ОбразецЗамены   = новый Образец("configVersion=\".*\"")

    ДанныеИзменения = ДанныеИзменения.Заменить(ОбразецЗамены, "configVersion=\"0000000000000000000000000000000000000000\"")

    ФайлИзменений.ОткрытьПотокЗаписи(Ложь).Записать(Байты{EF BB BF}).Записать(ДанныеИзменения).Закрыть()
    Консоль.Записать("\нИзменен файл %{ПутьКФайламПроекта}%{СР}ConfigDumpInfo.xml")

    возврат Истина
;

@Глобально
метод ПолучитьФайлыОбъектаМетаданных(ПутьКФайламПроекта: Строка, ИмяОбъектаМетаданных: Строка, ПолучитьФайлыРодителя = Ложь) : Соответствие<Строка, Строка>

    знч СР = Файлы.СимволРазделителя
    знч ФайлыОбъекта = новый Соответствие<Строка, Строка>()
    знч СоставИмениМетаданных = ИмяОбъектаМетаданных.Разделить(".")
    пер ОсновнойФайлПуть = ""
    пер ОсновнойКаталогПуть = ""

    если СоставИмениМетаданных[0] == "Configuration"
        ОсновнойКаталогПуть = "%{ПутьКФайламПроекта}%{СР}Ext"
        ОсновнойФайлПуть = "%{ПутьКФайламПроекта}%{СР}Configuration.xml"
    иначе если СоставИмениМетаданных[0] == "Subsystem"
        ОсновнойКаталогПуть = "%{ПутьКФайламПроекта}"
        для Индекс = 0 по СоставИмениМетаданных.Размер() - 1
            если Индекс % 2 == 0
                ОсновнойКаталогПуть = ОсновнойКаталогПуть + "%{СР}%{ПутьКОбъектуМетаданных(СоставИмениМетаданных[Индекс])}"
            иначе
                ОсновнойКаталогПуть = ОсновнойКаталогПуть + "%{СР}%{СоставИмениМетаданных[Индекс]}"
            ;
        ;
        ОсновнойФайлПуть = "%{ОсновнойКаталогПуть}.xml"
    иначе
        если СоставИмениМетаданных.Размер() == 2 или ПолучитьФайлыРодителя
            ОсновнойКаталогПуть = "%{ПутьКФайламПроекта}%{СР}%{ПутьКОбъектуМетаданных(СоставИмениМетаданных[0])}%{СР}%{СоставИмениМетаданных[1]}"
        иначе если СоставИмениМетаданных.Размер() == 4
            ОсновнойКаталогПуть = "%{ПутьКФайламПроекта}%{СР}%{ПутьКОбъектуМетаданных(СоставИмениМетаданных[0])}%{СР}%{СоставИмениМетаданных[1]}%{СР}%{ПутьКОбъектуМетаданных(СоставИмениМетаданных[2])}%{СР}%{СоставИмениМетаданных[3]}"
        иначе
            Консоль.Записать("Не определен путь к объекту метаданных: %{ИмяОбъектаМетаданных}")
            выбросить новый ИсключениеНедопустимоеСостояние()
        ;
        ОсновнойФайлПуть = "%{ОсновнойКаталогПуть}.xml"
    ;

    знч ОсновнойФайл = новый Файл(ОсновнойФайлПуть)
    если ОсновнойФайл.Существует()
        ФайлыОбъекта.Вставить("ПутьКОсновномуФайлу", ОсновнойФайл.Путь)
    иначе
        Консоль.Записать(ОсновнойФайлПуть)
        Консоль.Записать("Не существует путь к объекту метаданных: %{ОсновнойФайлПуть}")
        выбросить новый ИсключениеНедопустимоеСостояние()
    ;

    знч ОсновнойКаталог = новый Файл(ОсновнойКаталогПуть)
    если ОсновнойКаталог.Существует() и ОсновнойКаталог.ЭтоКаталог()
        ФайлыОбъекта.Вставить("ПутьКОсновномуКаталогу", ОсновнойКаталог.Путь)
    иначе если ОсновнойКаталог.Существует() и не ОсновнойКаталог.ЭтоКаталог()
        Консоль.Записать(ОсновнойФайлПуть)
        Консоль.Записать("Ошибочный путь к каталогу объекта метаданных: %{ОсновнойФайлПуть}")
        выбросить новый ИсключениеНедопустимоеСостояние()
    иначе
        ФайлыОбъекта.Вставить("ПутьКОсновномуКаталогу", "")
    ;

    возврат ФайлыОбъекта
;

@Глобально
метод ПрочитатьConfigDumpInfo(ПутьКФайламПроекта: Строка) : Соответствие<Строка, Соответствие<Строка, Строка|Число>>

    знч ConfigDumpInfo = ПолучитьФайлConfigDumpInfo(ПутьКФайламПроекта)
    знч ДанныеConfigDumpInfo = новый Соответствие<Строка, Соответствие<Строка, Строка|Число>>()

    если не ConfigDumpInfo.Существует()
        возврат ДанныеConfigDumpInfo
    ;

    исп ПотокЧтенияConfigDumpInfo = ConfigDumpInfo.ОткрытьПотокЧтения()

    пер ЧтениеXml = новый ЧтениеXml(ПотокЧтенияConfigDumpInfo)
    пер Уровень = 0
    пер ГУИДРодителя = ""
    пока ЧтениеXml.Следующий()
        
        если (ЧтениеXml.Имя == "Metadata"
            и ЧтениеXml.ВидУзла == ВидУзлаXml.КонецЭлемента)
            Уровень -= 1
        ;        
        если не (ЧтениеXml.Имя == "Metadata"
            и ЧтениеXml.ВидУзла == ВидУзлаXml.НачалоЭлемента)
            продолжить
        ;

        Уровень += 1

        пер ИмяМетаданных = ЧтениеXml.ЗначениеАтрибута("name")
        пер ГУИД = ЧтениеXml.ЗначениеАтрибута("id")

        если ГУИД.Найти(".") > 0
            продолжить
        ;

        если Уровень == 1
            ГУИДРодителя = ГУИД
        ;

        знч ДанныеОбъекта = новый Соответствие<Строка, Строка|Число>()
        ДанныеОбъекта.Вставить("ГУИД",         ГУИД)
        ДанныеОбъекта.Вставить("ГУИДРодителя", ГУИДРодителя == ГУИД ? "" : ГУИД)
        ДанныеОбъекта.Вставить("Имя",          ИмяМетаданных)
        ДанныеОбъекта.Вставить("Уровень",      Уровень)

        ДанныеConfigDumpInfo.Вставить(ГУИД, ДанныеОбъекта)

    ;
    ПотокЧтенияConfigDumpInfo.Закрыть()

    возврат ДанныеConfigDumpInfo
;

@Глобально
метод ПолучитьФайлПоставщика(ПутьКФайламПроекта: Строка): Файл

    знч СР = Файлы.СимволРазделителя
    знч НастройкиПоискаФайлов = новый НастройкиПоискаФайлов()
            .ИмяСодержит(".cf")
            .МаксимальнаяГлубина(1)
            .ИсключитьФайлы(Ложь)
            .ИсключитьКаталоги(Истина)
    пер ФайлПоставщика = Файлы.Найти(ПутьКФайламПроекта + "%{СР}Ext%{СР}ParentConfigurations", НастройкиПоискаФайлов)[0]

    возврат ФайлПоставщика

;

@Глобально
метод ПолучитьФайлConfigDumpInfo(ПутьКФайламПроекта: Строка): Файл

    знч СР = Файлы.СимволРазделителя
    знч ФайлConfigDumpInfo = новый Файл(ПутьКФайламПроекта + "%{СР}ConfigDumpInfo.xml")

    возврат ФайлConfigDumpInfo

;

@Глобально
метод ПолучитьФайлParentConfigurations(ПутьКФайламПроекта: Строка): Файл

    знч СР = Файлы.СимволРазделителя
    знч ФайлParentConfigurations = новый Файл(ПутьКФайламПроекта + "%{СР}Ext%{СР}ParentConfigurations.bin")

    возврат ФайлParentConfigurations

;

@Локально
метод ПутьКОбъектуМетаданных(ТипОбъектаМетаданных: Строка) : Строка

    выбор ТипОбъектаМетаданных
    когда "BusinessProcess"
        возврат "BusinessProcesses"
    когда "ChartOfAccounts"
        возврат "ChartsOfAccounts"
    когда "ChartOfCalculationTypes"
        возврат "ChartsOfCalculationTypes"
    когда "ChartOfCharacteristicTypes"
        возврат "ChartsOfCharacteristicTypes"
    когда "FilterCriterion"
        возврат "FilterCriteria"
    когда "Template"
        возврат "FilterCriteria"
    иначе
        возврат "%{ТипОбъектаМетаданных}s"
    ;
;