#!/usr/bin/executor

#требуется IProjectProperties.sbsl
#требуется IIBOperation.sbsl

// ПрограмнныйИнтерфейс

@Глобально
метод СобратьФайлыКонфигурации(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта, СобратьРасширения: Булево = Ложь, ПересобратьКонфигурациюПоставщика: Булево = Ложь) : Булево

    знч ВремяИсполненияОпераций = новый ILogging.ВремяИсполненияОпераций()
    знч СобранныеПроекты = новый Массив<Строка>()
    пер Статус = Истина

    если не СобратьРасширения
        если ПараметрыПроекта.ПутьКФайламКонфигурации.Путь.Пусто()
            возврат Статус
        ;

        ВремяИсполненияОпераций.НачатьЗамер("ПолучитьФайлКонфигурации")
        знч СтатусПолучения = ПолучитьФайлКонфигурации(
            ПараметрыПроекта,
            ПараметрыПроекта.ПутьКФайламКонфигурации,
            ПересобратьКонфигурациюПоставщика)
        знч Длительность = ВремяИсполненияОпераций.ЗавершитьЗамер("ПолучитьФайлКонфигурации")
        если СтатусПолучения == 1
            СобранныеПроекты.Добавить("%{IProjectProperties.ИМЯ_КАТАЛОГА_КОНФИГУРАЦИИ} (%{Длительность.Представление("с")} сек.)")
        ;
        Статус = Статус и СтатусПолучения < 2
    ;

    для Расширение из ПараметрыПроекта.Расширения
        если не СобратьРасширения
            прервать
        ;
        ВремяИсполненияОпераций.НачатьЗамер("ПолучитьФайлРасширения")
        знч СтатусПолучения = ПолучитьФайлКонфигурации(
            ПараметрыПроекта,
            Расширение.Значение,
            Ложь)
        знч Длительность = ВремяИсполненияОпераций.ЗавершитьЗамер("ПолучитьФайлРасширения")
        если СтатусПолучения == 1
            СобранныеПроекты.Добавить(Расширение.Ключ + " (%{Длительность.Представление("с")} сек.)")
        ;
        Статус = Статус и СтатусПолучения < 2
    ;

    ВывестиИнформациюПоСобраннымПроектам(СобранныеПроекты)

    возврат Статус
;

@Глобально
метод СобратьПатчКонфигурации(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта): Число

    знч ВремяИсполненияОпераций = новый ILogging.ВремяИсполненияОпераций()
    знч СобранныеПроекты = новый Массив<Строка>()

    если ПараметрыПроекта.ПутьКФайламКонфигурации.Путь.Пусто()
        возврат 1
    ;

    ВремяИсполненияОпераций.НачатьЗамер("СобратьПатчКонфигурации")

    знч СР                  = Файлы.СимволРазделителя
    знч КаталогСборкиПатча  = новый Файл("%{ПараметрыПроекта.ПутьКВременнымФайлам.Путь}%{СР}%{IProjectProperties.ИМЯ_КАТАЛОГА_ПАТЧА}")
    знч ФайлСборкиПатча     = новый Файл("%{ПараметрыПроекта.ПутьКСборкеПроекта.Путь}%{СР}%{IProjectProperties.ИМЯ_КАТАЛОГА_ПАТЧА}.zip")
    знч ФайлЗагрузки        = новый Файл("%{ФайлСборкиПатча.Путь.Заменить(".zip", "_in")}")
    знч ФайлВыгрузки        = новый Файл("%{ФайлСборкиПатча.Путь.Заменить(".zip", "_out")}")

    если КаталогСборкиПатча.Существует()
        УдалитьКаталогСКонтролемОшибок(КаталогСборкиПатча)
    ;

    пер СтруктураКонфигурации: IConfigurationProperties.СтруктураКонфигурации|Неопределено
    попытка
        СтруктураКонфигурации = ПрочитатьСтруктуруКонфигурации(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь, КаталогСборкиПатча.Путь)
    поймать Исключение: Исключение
        СтруктураКонфигурации = Неопределено
        если не Исключение.Описание.Пусто()
            Консоль.Записать("\н#################################################################")
            Консоль.Записать(Исключение.Описание)
            Консоль.Записать("#################################################################")
        ;
    ;

    если СтруктураКонфигурации == Неопределено
        возврат 2
    ;

    если СтруктураКонфигурации.Хеш == ПараметрыПроекта.ПутьКФайламКонфигурации.Хеш
        и ФайлСборкиПатча.Существует()
        и ФайлЗагрузки.Существует()
        и ФайлВыгрузки.Существует()
        возврат 1
    иначе
        ПараметрыПроекта.ПутьКФайламКонфигурации.Хеш = СтруктураКонфигурации.Хеш
    ;

    знч Архив = новый ФайлZip(Архив = ФайлСборкиПатча.Путь, КодировкаИменФайлов = Кодировка.Utf8)
    для Файл из КаталогСборкиПатча.Дочерние
        Архив.Добавить(Файл)
    ;

    ФайлЗагрузки.ОткрытьПотокЗаписи().Записать(СтруктураКонфигурации.ТекстФайлыДляЗагрузки).Закрыть()
    ФайлВыгрузки.ОткрытьПотокЗаписи().Записать(СтруктураКонфигурации.ТекстФайлыДляВыгрузки).Закрыть()

    знч Длительность = ВремяИсполненияОпераций.ЗавершитьЗамер("ПолучитьФайлКонфигурации")

    СобранныеПроекты.Добавить(IProjectProperties.ИМЯ_КАТАЛОГА_ПАТЧА + " (%{Длительность.Представление("с")} сек.)")
    ВывестиИнформациюПоСобраннымПроектам(СобранныеПроекты)

    возврат 0
;

@Глобально
метод ОбновитьФайлыКонфигурации(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта, ТипЗагрузки = 1, ПолучитьКонфигурациюПоставщика = Ложь, ПолучитьФайлСравнения = Ложь) : Булево

    знч ВремяИсполненияОпераций = новый ILogging.ВремяИсполненияОпераций()

    если ПараметрыПроекта.ПараметрыСоединенияИБ.СтрокаСоединения.Пусто()
        Консоль.Записать("\нНе заполнен путь к ИБ в файле хэша ProjectsHash.json")
        возврат Ложь
    ;

    если ТипЗагрузки == 1
        ВремяИсполненияОпераций.НачатьЗамер("ОбновитьКонфигурацию")
        ЗагрузитьКонфигурацию(ПараметрыПроекта, ПараметрыПроекта.ПараметрыСоединенияИБ, Ложь)
        ПолучитьФайлыКонфигурации(ПараметрыПроекта, Ложь, 2)
        ВремяИсполненияОпераций.ЗавершитьЗамер("ОбновитьКонфигурацию")
    иначе если ТипЗагрузки == 2
        ВремяИсполненияОпераций.НачатьЗамер("ОбновитьКонфигурациюизФайлов")
        ЗагрузитьФайлыКонфигурации(ПараметрыПроекта, ПараметрыПроекта.ПараметрыСоединенияИБ, Ложь)
        ПолучитьФайлыКонфигурации(ПараметрыПроекта, Ложь, 2)
        ВремяИсполненияОпераций.ЗавершитьЗамер("ОбновитьКонфигурациюизФайлов")
    иначе если ТипЗагрузки == 3
        ВремяИсполненияОпераций.НачатьЗамер("ОбновитьРасширенияонфигурации")
        ЗагрузитьКонфигурацию(ПараметрыПроекта, ПараметрыПроекта.ПараметрыСоединенияИБ, Истина)
        ВремяИсполненияОпераций.ЗавершитьЗамер("ОбновитьРасширенияонфигурации")
     иначе если ТипЗагрузки == 4
        ВремяИсполненияОпераций.НачатьЗамер("ОбновитьРасширенияонфигурацииИзФайлов")
        ЗагрузитьФайлыКонфигурации(ПараметрыПроекта, ПараметрыПроекта.ПараметрыСоединенияИБ, Истина)
        ВремяИсполненияОпераций.ЗавершитьЗамер("ОбновитьРасширенияонфигурацииИзФайлов")
   иначе
        ВремяИсполненияОпераций.НачатьЗамер("ОбновитьПатчКонфигурации")
        ЗагрузитьПатчКонфигурации(ПараметрыПроекта, ПараметрыПроекта.ПараметрыСоединенияИБ, ПолучитьКонфигурациюПоставщика, ПолучитьФайлСравнения)
        ВремяИсполненияОпераций.ЗавершитьЗамер("ОбновитьПатчКонфигурации")
    ;

    возврат Истина
;

@Глобально
метод ПодготовитьКонфигурацию(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта) : Булево

    пер СтатусВыполнения = Истина
    знч ВремяИсполненияОпераций = новый ILogging.ВремяИсполненияОпераций()

    если ПараметрыПроекта.РежимСборкиПроектаРасширения == IProjectProperties.РежимыСборкиПроекта.ВПустойКонфигурации
        возврат СтатусВыполнения
    ;

    ВремяИсполненияОпераций.НачатьЗамер("ПодготовитьКонфигурацию")

    знч Версия = IConfiguration.ПрочитатьВерсиюКонфигурации(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь)
    знч КаталогВременнойБазы = ПолучитьВременныйКаталог(ПараметрыПроекта, IProjectProperties.ИМЯ_КАТАЛОГА_КОНФИГУРАЦИИ, Версия)

    если КаталогВременнойБазы.Дочерние.Размер() == 0
        СтатусВыполнения = СобратьФайлыКонфигурации(ПараметрыПроекта)
    иначе
        знч РезультатСборки = СобратьПатчКонфигурации(ПараметрыПроекта)
        если РезультатСборки == 0
            знч ПараметрыСоединенияИБ = новый IProjectProperties.ПараметрыСоединенияИБ(
                КаталогВременнойБазы.Путь)
            ЗагрузитьПатчКонфигурации(ПараметрыПроекта, ПараметрыСоединенияИБ)
        ;
        СтатусВыполнения = РезультатСборки < 2
    ;

    ВремяИсполненияОпераций.ЗавершитьЗамер("ПодготовитьКонфигурацию")

    возврат СтатусВыполнения

;

@Глобально
метод ПеревестиФайлИзмененныхОбъектовВНовыйФормат(ПутьКФайламПроекта: Строка)

    IConfiguration.ПеревестиВНовыйФорматParentConfigurations(ПутьКФайламПроекта)
;

@Глобально
метод ПеревестиФайлИсторииОбъектовВНовыйФормат(ПутьКФайламПроекта: Строка)

    IConfiguration.ПеревестиВНовыйФорматConfigDumpInfo(ПутьКФайламПроекта)
;

@Глобально
метод АнализироватьНастройкиПоддержки(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта, ИсправитьОшибки = Ложь, ДляКонфигурацииПоставщика = Ложь) : Булево

    пер ПутьКФайламПроекта = ПараметрыПроекта.ПутьКФайламКонфигурации
    знч ВремяИсполненияОпераций = новый ILogging.ВремяИсполненияОпераций()

    ВремяИсполненияОпераций.НачатьЗамер("АнализироватьНастройкиПоддержки")

    если ДляКонфигурацииПоставщика
        ПолучитьФайлыКонфигурации(ПараметрыПроекта, ДляКонфигурацииПоставщика)
        ПутьКФайламПроекта = ПараметрыПроекта.ПутьКФайламКонфигурацииПоставщика
    ;

    знч СтруктураКонфигурации = IConfiguration.ПрочитатьСтруктуруКонфигурации(ПутьКФайламПроекта.Путь, IConfigurationProperties.РежимОбработки.Основной)
    IConfiguration.ИсправитьНастройкиПоддержки(СтруктураКонфигурации, ИсправитьОшибки)

    ВремяИсполненияОпераций.ЗавершитьЗамер("АнализироватьНастройкиПоддержки")

    возврат Истина
;

@Глобально
метод ПолучитьФайлыКонфигурации(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта, ДляКонфигурацииПоставщика = Ложь, Режим = 0) : Булево

    пер ПутьКФайламПроекта = ПараметрыПроекта.ПутьКФайламКонфигурации
    если ДляКонфигурацииПоставщика
        ПутьКФайламПроекта = ПараметрыПроекта.ПутьКФайламКонфигурацииПоставщика
    ;
    знч КаталогФайловПроекта = новый Файл(ПутьКФайламПроекта.Путь)
    пер ФайлыДляВыгрузки = ""
    знч ВремяИсполненияОпераций = новый ILogging.ВремяИсполненияОпераций()

    если Режим == 2
        ФайлыДляВыгрузки = "ConfigDumpInfo.xml"
    ;

    ВремяИсполненияОпераций.НачатьЗамер("ПолучитьФайлыКонфигурации")

    если ДляКонфигурацииПоставщика

        знч ФайлConfigDumpInfo = IConfiguration.ПолучитьФайлConfigDumpInfo(КаталогФайловПроекта.Путь)
        если Режим == 2 и ФайлConfigDumpInfo.Существует()
            возврат Истина
        ;

        знч СтруктураКонфигурации = ПрочитатьСтруктуруКонфигурации(КаталогФайловПроекта.Путь)
        если СтруктураКонфигурации.Хеш == ПутьКФайламПроекта.Хеш и КаталогФайловПроекта.Существует()
            возврат Истина
        ;

        знч КаталогВременнойБазыПоставщика = ПолучитьВременныйКаталог(ПараметрыПроекта, IProjectProperties.ИМЯ_КАТАЛОГА_КОНФИГУРАЦИИ_ПОСТАВЩИКА, СтруктураКонфигурации.Версия)
        знч ПутьКФайлуПоставщика = IConfiguration.ПолучитьФайлПоставщика(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь)

        IIBOperation.СоздатьИнформационнуюБазу(
            КаталогВременнойБазыПоставщика.Путь,
            ПараметрыПроекта.ПутьКФайламПлатформы,
            ПараметрыПроекта.РежимИСполнения)

        IIBOperation.ЗагрузитьКонфигурацию(
            ПутьКФайлуПоставщика.Путь,
            КаталогВременнойБазыПоставщика.Путь,
            ПараметрыПроекта.ПутьКФайламПлатформы,
            ПараметрыПроекта.РежимИСполнения,
            "",
            "",
            "")

        УдалитьКаталогСКонтролемОшибок(КаталогФайловПроекта)

        IIBOperation.ВыгрузитьФайлыКонфигурации(
            КаталогФайловПроекта.Путь,
            КаталогВременнойБазыПоставщика.Путь,
            ПараметрыПроекта.ПутьКФайламПлатформы,
            ПараметрыПроекта.РежимИСполнения,
            "",
            "",
            "",
            ФайлыДляВыгрузки)

        ПутьКФайламПроекта.Хеш = СтруктураКонфигурации.Хеш

        УдалитьКаталогСКонтролемОшибок(КаталогВременнойБазыПоставщика)

    иначе

        если ПараметрыПроекта.ПараметрыСоединенияИБ.СтрокаСоединения.Пусто()
          Консоль.Записать("\нНе заполнен путь к ИБ в файле хэша ProjectsHash.json")
          возврат Ложь
        ;

        знч ПутьКФайлуВерсии = (Режим == 2 или ПараметрыПроекта.ФайлВерсийКонфигурации == Неопределено) ? "" :
            ПараметрыПроекта.ФайлВерсийКонфигурации.Путь

        пер ПутьДляВыгрузки = ПутьКФайламПроекта.Путь
        если Режим == 2
            ПутьДляВыгрузки = ПараметрыПроекта.ПутьКВременнымФайлам.Путь
        ;
        если не ПутьКФайлуВерсии.Пусто()
            ПутьДляВыгрузки = ПутьКФайлуВерсии.Заменить(".xml", "")
        ;

        IIBOperation.ВыгрузитьФайлыКонфигурации(
            ПутьДляВыгрузки,
            ПараметрыПроекта.ПараметрыСоединенияИБ.СтрокаСоединения,
            ПараметрыПроекта.ПутьКФайламПлатформы,
            ПараметрыПроекта.РежимИСполнения,
            ПараметрыПроекта.ПараметрыСоединенияИБ.Логин,
            ПараметрыПроекта.ПараметрыСоединенияИБ.Пароль,
            "",
            ФайлыДляВыгрузки,
            ПутьКФайлуВерсии)

        если не ПутьКФайлуВерсии.Пусто()
            знч НастройкиПоиска = новый НастройкиПоискаФайлов()
                .ИсключитьКаталоги(Истина)
                .ИсключитьСсылки(Истина)
            знч НайденныеФайлы = Файлы.Найти(ПутьДляВыгрузки, НастройкиПоиска)
            для ФайлИсточник из НайденныеФайлы
                если ФайлИсточник.ИмяБезРасширения == "ConfigDumpInfo"
                    Файлы.Скопировать(ФайлИсточник, ПутьКФайлуВерсии)
                ;
                знч ФайлЦель = новый Файл(ПутьКФайламПроекта.Путь + ФайлИсточник.Путь.Заменить(ПутьДляВыгрузки, ""))
                знч НастройкиКопированияФайлов = новый НастройкиКопированияФайлов()
                Файлы.Переместить(ФайлИсточник, ФайлЦель, НастройкиКопированияФайлов)
            ;
            Консоль.Записать("\нКаталог файлов конфигурации обновлен")
            Файлы.Удалить(ПутьДляВыгрузки)
        ;
    ;

    если Режим != 2
        ПеревестиФайлИзмененныхОбъектовВНовыйФормат(ПутьКФайламПроекта.Путь)
        ПеревестиФайлИсторииОбъектовВНовыйФормат(ПутьКФайламПроекта.Путь)
    ;

    ВремяИсполненияОпераций.ЗавершитьЗамер("ПолучитьФайлыКонфигурации")

    возврат Истина
;

// СлужеюныеПроцедурыИФункции

@Локально
метод ПрочитатьСтруктуруКонфигурации(ПутьККаталогуПроекта: Строка, ПутьККаталогуСборкиПатча = "", ИсправитьОшибки = Ложь) : IConfigurationProperties.СтруктураКонфигурации

    знч РежимОбработки = IConfigurationProperties.РежимОбработки.ПолучитьПоПоддержке
    знч СтруктураКонфигурации = IConfiguration.ПрочитатьСтруктуруКонфигурации(
        ПутьККаталогуПроекта,
        РежимОбработки)
    IConfiguration.ИсправитьНастройкиПоддержки(СтруктураКонфигурации, ИсправитьОшибки)
    IConfiguration.ОбработатьФайлыКонфигурации(
        СтруктураКонфигурации,
        ПутьККаталогуПроекта,
        ПутьККаталогуСборкиПатча,
        РежимОбработки)

    возврат СтруктураКонфигурации

;

@Локально
метод ПолучитьФайлКонфигурации(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта, ПутьКФайламПроекта: IProjectProperties.ПутьКФайламПроекта, ПересобратьКонфигурациюПоставщика: Булево = Ложь): Число

    пер Результат = 0
    знч СР = Файлы.СимволРазделителя
    знч ПутьКФайламПлатформы         = ПараметрыПроекта.ПутьКФайламПлатформы
    знч РежимИсполнения              = ПутьКФайламПроекта.ЭтоРасширение ? ПараметрыПроекта.РежимИСполненияРасширения : ПараметрыПроекта.РежимИСполнения
    знч РасширениеФайлаСборки        = ПутьКФайламПроекта.ЭтоРасширение ? "cfe" : "cf"
    знч ФайлСборки                   = новый Файл(ПараметрыПроекта.ПутьКСборкеПроекта.Путь + СР + (ПутьКФайламПроекта.ЭтоРасширение ? "%{ПутьКФайламПроекта.Имя}.%{РасширениеФайлаСборки}" : "1Cv8.%{РасширениеФайлаСборки}"))

    пер СтруктураКонфигурации = ПрочитатьСтруктуруКонфигурации(ПутьКФайламПроекта.Путь, ИсправитьОшибки = ПересобратьКонфигурациюПоставщика)
    знч Версия = IConfiguration.ПрочитатьВерсиюКонфигурации(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь)

    знч КаталогВременнойБазы         = ПолучитьВременныйКаталог(ПараметрыПроекта, IProjectProperties.ИМЯ_КАТАЛОГА_КОНФИГУРАЦИИ, Версия)
    знч СоздатьИнформационнуюБазу    = (не ПутьКФайламПроекта.ЭтоРасширение
        или ПараметрыПроекта.РежимСборкиПроектаРасширения == IProjectProperties.РежимыСборкиПроекта.ВОсновнойКонфигурации
        и КаталогВременнойБазы.Дочерние.Размер() == 0
        или ПараметрыПроекта.РежимСборкиПроектаРасширения == IProjectProperties.РежимыСборкиПроекта.ВПустойКонфигурации)
    знч ФайлКонфигурацииПоставщика  = IConfiguration.ПолучитьФайлПоставщика(ПутьКФайламПроекта.Путь)

    если не ПересобратьКонфигурациюПоставщика
        и СтруктураКонфигурации.Хеш == ПутьКФайламПроекта.Хеш
        и ФайлСборки.Существует()
        и (ПараметрыПроекта.РежимСборкиПроектаРасширения == IProjectProperties.РежимыСборкиПроекта.ВОсновнойКонфигурации
            и КаталогВременнойБазы.Дочерние.Размер() > 0
            или ПараметрыПроекта.РежимСборкиПроектаРасширения == IProjectProperties.РежимыСборкиПроекта.ВПустойКонфигурации)
        Консоль.Записать("\н%{ПутьКФайламПроекта.Имя}: изменений нет")
        возврат Результат
    ;

    попытка

        если ПересобратьКонфигурациюПоставщика

            знч ВременныйКаталогБазыПоставщика = ПолучитьВременныйКаталог(ПараметрыПроекта, IProjectProperties.ИМЯ_КАТАЛОГА_КОНФИГУРАЦИИ_ПОСТАВЩИКА, Версия)
            если ВременныйКаталогБазыПоставщика.Существует()
                УдалитьКаталогСКонтролемОшибок(ВременныйКаталогБазыПоставщика)
            ;
            знч ВременныйКаталогВыгрузки       = ПолучитьВременныйКаталог(ПараметрыПроекта, "%{КаталогВременнойБазы.ИмяБезРасширения}_xml")
            если ВременныйКаталогВыгрузки.Существует()
                УдалитьКаталогСКонтролемОшибок(ВременныйКаталогВыгрузки)
            ;
            
            IIBOperation.СоздатьИнформационнуюБазу(
                ВременныйКаталогБазыПоставщика.Путь,
                ПутьКФайламПлатформы,
                РежимИсполнения)

            IIBOperation.ЗагрузитьКонфигурацию(
                ФайлКонфигурацииПоставщика.Путь,
                ВременныйКаталогБазыПоставщика.Путь,
                ПутьКФайламПлатформы,
                РежимИсполнения,
                "",
                "",
                ПутьКФайламПроекта.Имя)

            IIBOperation.ВыгрузитьФайлыКонфигурации(
                ВременныйКаталогВыгрузки.Путь,
                ВременныйКаталогБазыПоставщика.Путь,
                ПутьКФайламПлатформы,
                РежимИсполнения,
                "",
                "",
                ПутьКФайламПроекта.Имя)

            УдалитьКаталогСКонтролемОшибок(ВременныйКаталогБазыПоставщика)

            IIBOperation.СоздатьИнформационнуюБазу(
                ВременныйКаталогБазыПоставщика.Путь,
                ПутьКФайламПлатформы,
                РежимИсполнения)

            IIBOperation.ЗагрузитьФайлыКонфигурации(
                ВременныйКаталогВыгрузки.Путь,
                ВременныйКаталогБазыПоставщика.Путь,
                ПутьКФайламПлатформы,
                РежимИсполнения,
                "",
                "",
                ПутьКФайламПроекта.Имя)

            IConfiguration.ОбработатьФайлыКонфигурации(
                СтруктураКонфигурации,
                ПутьКФайламПроекта.Путь,
                ВременныйКаталогВыгрузки.Путь,
                IConfigurationProperties.РежимОбработки.ПолучитьПоПоддержке)
            Консоль.Записать("\нВ \"%{ПутьКФайламПроекта.Путь}\" добавлены измененые файлы из основной конфигурации")

            Файлы.СоздатьКаталог("%{ВременныйКаталогВыгрузки.Путь}%{СР}Ext%{СР}ParentConfigurations")
            IIBOperation.ВыгрузитьКонфигурацию(
                "%{ВременныйКаталогВыгрузки.Путь}%{СР}Ext%{СР}ParentConfigurations%{СР}%{ФайлКонфигурацииПоставщика.Имя}",
                ВременныйКаталогБазыПоставщика.Путь,
                ПутьКФайламПлатформы,
                РежимИсполнения,
                "",
                "",
                ПутьКФайламПроекта.Имя)

            УдалитьКаталогСКонтролемОшибок(ВременныйКаталогБазыПоставщика)

            УдалитьКаталогСКонтролемОшибок(ПутьКФайламПроекта.Путь, Истина)
            Файлы.Скопировать(ВременныйКаталогВыгрузки.Путь, ПутьКФайламПроекта.Путь)
            Консоль.Записать("\нПеренесены изменения из \"%{ВременныйКаталогВыгрузки.Путь}\" в основную конфигурацию")

            УдалитьКаталогСКонтролемОшибок(ВременныйКаталогВыгрузки)
        ;

        если СоздатьИнформационнуюБазу
            если КаталогВременнойБазы.Существует()
                УдалитьКаталогСКонтролемОшибок(КаталогВременнойБазы)
            ;
            IIBOperation.СоздатьИнформационнуюБазу(
                КаталогВременнойБазы.Путь,
                ПутьКФайламПлатформы,
                РежимИсполнения)
        ;

        пер МаксимальноеЧислоПопыток  = ПутьКФайламПроекта.ЭтоРасширение ? 4 : 1
        пер ВременныйХешПроектаДо     = СтруктураКонфигурации.Хеш
        пер ВременныйХешПроектаПосле  = СтруктураКонфигурации.Хеш
        пер ВременныйХешПроектаЧетный = СтруктураКонфигурации.Хеш

        для ЧислоПопыток = 1 по МаксимальноеЧислоПопыток

            ВременныйХешПроектаДо = ВременныйХешПроектаПосле

            IIBOperation.ЗагрузитьФайлыКонфигурации(
                ПутьКФайламПроекта.Путь,
                КаталогВременнойБазы.Путь,
                ПутьКФайламПлатформы,
                РежимИсполнения,
                "",
                "",
                ПутьКФайламПроекта.Имя)

            УдалитьКаталогСКонтролемОшибок(ПутьКФайламПроекта.Путь, Истина)

            IIBOperation.ВыгрузитьФайлыКонфигурации(
                ПутьКФайламПроекта.Путь,
                КаталогВременнойБазы.Путь,
                ПутьКФайламПлатформы,
                РежимИсполнения,
                "",
                "",
                ПутьКФайламПроекта.Имя)

            знч ВремСтруктураКонфигурации = ПрочитатьСтруктуруКонфигурации(ПутьКФайламПроекта.Путь)
            ВременныйХешПроектаПосле = ВремСтруктураКонфигурации.Хеш

            если не ПутьКФайламПроекта.ЭтоРасширение или ВременныйХешПроектаПосле == ВременныйХешПроектаДо
                или ВременныйХешПроектаПосле == ВременныйХешПроектаЧетный
                // Вторая проврека нужна из-за ошибки выгрузки ролей в расширениях
                СтруктураКонфигурации = ВремСтруктураКонфигурации
                прервать
            иначе
                Консоль.Записать("\н*****************************************************************")
                Консоль.Записать("Повторная выгрузка репозитория")
                Консоль.Записать("*****************************************************************")
            ;

            если ЧислоПопыток % 2 == 0
                ВременныйХешПроектаЧетный = ВременныйХешПроектаПосле
            ;
        ;

        если ПутьКФайламПроекта.ЭтоРасширение
            и не ВременныйХешПроектаПосле == ВременныйХешПроектаДо
            и не ВременныйХешПроектаПосле == ВременныйХешПроектаЧетный
            выбросить новый ИсключениеНедопустимоеСостояние("Ошибка выгрузки проекта")
        ;

        IIBOperation.ВыгрузитьКонфигурацию(
            ФайлСборки.Путь,
            КаталогВременнойБазы.Путь,
            ПутьКФайламПлатформы,
            РежимИсполнения,
            "",
            "",
            ПутьКФайламПроекта.Имя)

        если ПересобратьКонфигурациюПоставщика
            IIBOperation.СравнитьКонфигурации(
                ПараметрыПроекта.ПутьКВременнымФайлам.Путь + СР + "ИзмененияВКонфигурации_prod.mxl",
                КаталогВременнойБазы.Путь,
                ПараметрыПроекта.ПутьКФайламПлатформы,
                "",
                "",
                oc_main.РежимыСравнения.СравнитьСКонфигурациейПоставщика,
                ФайлКонфигурацииПоставщика.ИмяБезРасширения)
        ;

        Результат = 1
        ПутьКФайламПроекта.Хеш = СтруктураКонфигурации.Хеш

    поймать Исключение: Исключение
        если не Исключение.Описание.Пусто()
            Консоль.Записать("\н#################################################################")
            Консоль.Записать(Исключение.Описание)
            Консоль.Записать("#################################################################")
        ;
        Результат = 2
    ;

    если ПараметрыПроекта.РежимСборкиПроектаРасширения == IProjectProperties.РежимыСборкиПроекта.ВПустойКонфигурации
        УдалитьКаталогСКонтролемОшибок(КаталогВременнойБазы)
    ;

    возврат Результат
;

@Локально
метод ЗагрузитьКонфигурацию(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта, ПараметрыСоединенияИБ: IProjectProperties.ПараметрыСоединенияИБ, ЭтоРасширение = Ложь)

    знч СР = Файлы.СимволРазделителя
    знч РасширениеФайлаЗагрузки = ЭтоРасширение ? "cfe" : "cf"
    знч РежимИсполнения         = ЭтоРасширение ? ПараметрыПроекта.РежимИСполненияРасширения : ПараметрыПроекта.РежимИСполнения

    знч ФайлыЗагрузки = новый Массив<Файл>()
    если ЭтоРасширение
        для Расширение из ПараметрыПроекта.Расширения
            ФайлыЗагрузки.Добавить(новый Файл(ПараметрыПроекта.ПутьКСборкеПроекта.Путь + СР + Расширение.Ключ + "." + РасширениеФайлаЗагрузки))
        ;
    иначе
        ФайлыЗагрузки.Добавить(новый Файл(ПараметрыПроекта.ПутьКСборкеПроекта.Путь + СР + "1Cv8." + РасширениеФайлаЗагрузки))
    ;

    для Файл из ФайлыЗагрузки
         если не Файл.Существует()
            Консоль.Записать(Файл.Путь)
            продолжить
        ;
        IIBOperation.ЗагрузитьКонфигурацию(
            Файл.Путь,
            ПараметрыСоединенияИБ.СтрокаСоединения,
            ПараметрыПроекта.ПутьКФайламПлатформы,
            РежимИсполнения,
            ПараметрыСоединенияИБ.Логин,
            ПараметрыСоединенияИБ.Пароль,
            (ЭтоРасширение ? Файл.ИмяБезРасширения : "")
        )
    ;

;

@Локально
метод ЗагрузитьФайлыКонфигурации(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта, ПараметрыСоединенияИБ: IProjectProperties.ПараметрыСоединенияИБ, ЭтоРасширение = Ложь)

    знч РежимИсполнения = ЭтоРасширение ? ПараметрыПроекта.РежимИСполненияРасширения : ПараметрыПроекта.РежимИСполнения

    знч ФайлыЗагрузки = новый Массив<Файл>()
    если ЭтоРасширение
        для Расширение из ПараметрыПроекта.Расширения
            ФайлыЗагрузки.Добавить(новый Файл(Расширение.Значение.Путь))
        ;
    иначе
        ФайлыЗагрузки.Добавить(новый Файл(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь))
    ;

    для Файл из ФайлыЗагрузки
         если не Файл.Существует()
            Консоль.Записать(Файл.Путь)
            продолжить
        ;
        IIBOperation.ЗагрузитьФайлыКонфигурации(
            Файл.Путь,
            ПараметрыСоединенияИБ.СтрокаСоединения,
            ПараметрыПроекта.ПутьКФайламПлатформы,
            РежимИсполнения,
            ПараметрыСоединенияИБ.Логин,
            ПараметрыСоединенияИБ.Пароль,
            (ЭтоРасширение ? Файл.ИмяБезРасширения : "")
        )
    ;

;

@Локально
метод ЗагрузитьПатчКонфигурации(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта, ПараметрыСоединенияИБ: IProjectProperties.ПараметрыСоединенияИБ, ПолучитьКонфигурациюПоставщика = Ложь, ПолучитьФайлСравнения = Ложь)

    знч СР = Файлы.СимволРазделителя

    знч КаталогДляЗагрузки  = новый Файл("%{ПараметрыПроекта.ПутьКВременнымФайлам.Путь}%{СР}%{IProjectProperties.ИМЯ_КАТАЛОГА_ПАТЧА}")
    знч ФайлДляЗагрузки     = новый Файл("%{ПараметрыПроекта.ПутьКСборкеПроекта.Путь}%{СР}%{IProjectProperties.ИМЯ_КАТАЛОГА_ПАТЧА}.zip")
    знч ФайлЗагрузки        = новый Файл("%{ФайлДляЗагрузки.Путь.Заменить(".zip", "_in")}")
    знч ФайлВыгрузки        = новый Файл("%{ФайлДляЗагрузки.Путь.Заменить(".zip", "_out")}")

    если не КаталогДляЗагрузки.Существует()
        или не ФайлЗагрузки.Существует()
        или не ФайлВыгрузки.Существует()
        возврат
    ;

    знч КаталогДляВыгрузки = ПолучитьВременныйКаталог(ПараметрыПроекта, IProjectProperties.ИМЯ_КАТАЛОГА_ПАТЧА)

    пер ПутьКФайлуПоставщика = IConfiguration.ПолучитьФайлПоставщика(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь)
    пер ПутьКФайлуПоставщикаЗагрузки = ""

    если (ПутьКФайлуПоставщика.Путь.Пусто()
        или ПолучитьКонфигурациюПоставщика)
        IIBOperation.ВыгрузитьФайлыКонфигурации(
            КаталогДляВыгрузки.Путь,
            ПараметрыСоединенияИБ.СтрокаСоединения,
            ПараметрыПроекта.ПутьКФайламПлатформы,
            ПараметрыПроекта.РежимИСполнения,
            ПараметрыСоединенияИБ.Логин,
            ПараметрыСоединенияИБ.Пароль,
            "",
            ФайлВыгрузки)
        ПутьКФайлуПоставщика = IConfiguration.ПолучитьФайлПоставщика(КаталогДляВыгрузки.Путь)
        ПутьКФайлуПоставщикаЗагрузки = ПутьКФайлуПоставщика.Путь.Заменить(КаталогДляВыгрузки.Путь, КаталогДляЗагрузки.Путь)
    иначе
        ПутьКФайлуПоставщикаЗагрузки = ПутьКФайлуПоставщика.Путь.Заменить(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь, КаталогДляЗагрузки.Путь + СР)
    ;
    если ПутьКФайлуПоставщика.Существует()
        Файлы.Скопировать(ПутьКФайлуПоставщика, ПутьКФайлуПоставщикаЗагрузки)
    ;

    IIBOperation.ЗагрузитьФайлыКонфигурации(
        //(ФайлДляЗагрузки.Существует() ? ФайлДляЗагрузки.Путь : КаталогДляЗагрузки.Путь),
        КаталогДляЗагрузки.Путь,
        ПараметрыСоединенияИБ.СтрокаСоединения,
        ПараметрыПроекта.ПутьКФайламПлатформы,
        ПараметрыПроекта.РежимИСполнения,
        ПараметрыСоединенияИБ.Логин,
        ПараметрыСоединенияИБ.Пароль,
        "",
        ФайлЗагрузки)

    если ПараметрыПроекта.ФайлВерсийКонфигурации.Существует()
        знч ФайлВерсийКонфигурации = IConfiguration.ПолучитьФайлConfigDumpInfo(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь)
        знч НастройкиКопирования = новый НастройкиКопированияФайлов()
            .ПропускатьСуществующие(Ложь)
        Файлы.Скопировать(ФайлВерсийКонфигурации, ПараметрыПроекта.ФайлВерсийКонфигурации, НастройкиКопирования)
    ;

    если ПолучитьФайлСравнения
        IIBOperation.СравнитьКонфигурации(
            ПараметрыПроекта.ПутьКВременнымФайлам.Путь + СР + "ИзмененияВКонфигурации.mxl",
            ПараметрыСоединенияИБ.СтрокаСоединения,
            ПараметрыПроекта.ПутьКФайламПлатформы,
            ПараметрыСоединенияИБ.Логин,
            ПараметрыСоединенияИБ.Пароль,
            oc_main.РежимыСравнения.СравнитьСКонфигурациейИБ)
    ;

    если не ПараметрыПроекта.ФайлВерсийКонфигурации == Неопределено
        знч ConfigDumpInfoВыгрузки = IConfiguration.ПолучитьФайлConfigDumpInfo(КаталогДляВыгрузки.Путь)
        Файлы.Скопировать(ConfigDumpInfoВыгрузки, ПараметрыПроекта.ФайлВерсийКонфигурации)
    ;

    УдалитьКаталогСКонтролемОшибок(КаталогДляВыгрузки)
    УдалитьКаталогСКонтролемОшибок(ПутьКФайлуПоставщикаЗагрузки)

;

@Локально
метод ВывестиИнформациюПоСобраннымПроектам(СобранныеПроекты: Массив<Строка>)

    если не СобранныеПроекты.Пусто()
        Консоль.Записать("\нСобраны проекты:")
    ;

    для ИмяПроекта из СобранныеПроекты
        Консоль.Записать(ИмяПроекта)
    ;

;

@Локально
метод ПолучитьВременныйКаталог(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта, ИмяКаталога: Строка, Версия = "") : Файл

    знч СР = Файлы.СимволРазделителя
    пер ПутьКВременномуКаталогу = ""
    если ПараметрыПроекта.ПутьКВременнымФайлам.ОтносительныйПуть.Пусто()
        ПутьКВременномуКаталогу = Файлы.СоздатьВременныйКаталог().Путь
    иначе
        ПутьКВременномуКаталогу = ПараметрыПроекта.ПутьКВременнымФайлам.ОтносительныйПуть
            + СР + ИмяКаталога
            + (Версия.Пусто() ? "" : "_%{Версия.Заменить(".", "_")}")
    ;

    знч ВременныйКаталог = новый Файл(ПутьКВременномуКаталогу)

    возврат ВременныйКаталог
;

@Локально
метод УдалитьКаталогСКонтролемОшибок(Каталог: Файл|Строка, ОчиститьКаталог = Ложь)

    попытка
        Файлы.Удалить(Каталог)
        если ОчиститьКаталог
            Файлы.СоздатьКаталог(Каталог)
        ;
        знч ПутьККаталогу = Каталог.ПолучитьТип() == Тип<Строка> ? (Каталог как Строка) : (Каталог как Файл).Путь
        Консоль.Записать("\нКаталог %{ПутьККаталогу} очищен")
    поймать Исключение: Исключение
        если не Исключение.Описание.Пусто()
            Консоль.Записать("\н#################################################################")
            Консоль.Записать(Исключение.Описание)
            Консоль.Записать("#################################################################")
        ;
    ;
;