#!/usr/bin/executor

конст КОДИРОВКА = "UTF-8"

@Глобально
метод СоздатьИнформационнуюБазу(ПутьКИнформационнойБазе: Строка, ИмяФайлаПлатформы: Строка)

    пер ПараметрыПроцесса = новый Массив<Строка>()
    ПараметрыПроцесса.Добавить("infobase")
    ПараметрыПроцесса.Добавить("create")
    ПараметрыПроцесса.Добавить("--db-path")
    ПараметрыПроцесса.Добавить("\"%ПутьКИнформационнойБазе\"")
    ПараметрыПроцесса.Добавить("--force")

    ВыполнитьКомандуПлатформыСОжиданием(ИмяФайлаПлатформы, ПараметрыПроцесса)

    Консоль.Записать("ИБ успешно создана")
;

@Глобально
метод ЗагрузитьКонфигурацию(ПутьКФайлуСборки: Строка, ПутьКИнформационнойБазе: Строка, ИмяФайлаПлатформы: Строка,
                ИмяПользователя: Строка = "", Пароль: Строка = "", ИмяРасширения: Строка = "")
    
    пер ПараметрыПроцесса = новый Массив<Строка>()
    ПараметрыПроцесса.Добавить("infobase")
    ПараметрыПроцесса.Добавить("config")
    ПараметрыПроцесса.Добавить("load")
    ПараметрыПроцесса.Добавить("\"%ПутьКФайлуСборки\"")
    ПараметрыПроцесса.Добавить("--db-path")
    ПараметрыПроцесса.Добавить("\"%ПутьКИнформационнойБазе\"")
    если не ИмяРасширения.Пусто()
        ПараметрыПроцесса.Добавить("--extension")
        ПараметрыПроцесса.Добавить(ИмяРасширения)
    ;
    если не ИмяПользователя.Пусто()
        ПараметрыПроцесса.Добавить("--user=")
        ПараметрыПроцесса.Добавить("\"%ИмяПользователя\"")
    ;
    если не Пароль.Пусто()
        ПараметрыПроцесса.Добавить("--password=")
        ПараметрыПроцесса.Добавить(Пароль)
    ;

    ВыполнитьКомандуПлатформыСОжиданием(ИмяФайлаПлатформы, ПараметрыПроцесса)

    Консоль.Записать("XML файлы успешно загружены в ИБ")
;

@Глобально
метод ЗагрузитьФайлыКонфигурации(ПутьКФайламПроекта: Строка, ПутьКИнформационнойБазе: Строка, ИмяФайлаПлатформы: Строка,
                        ИмяПользователя: Строка = "", Пароль: Строка = "", ИмяРасширения: Строка = "")
    
    пер ПараметрыПроцесса = новый Массив<Строка>()
    ПараметрыПроцесса.Добавить("infobase")
    ПараметрыПроцесса.Добавить("config")
    ПараметрыПроцесса.Добавить("import")
    ПараметрыПроцесса.Добавить("\"%ПутьКФайламПроекта\"")
    ПараметрыПроцесса.Добавить("--db-path")
    ПараметрыПроцесса.Добавить("\"%ПутьКИнформационнойБазе\"")
    если не ИмяРасширения.Пусто()
        ПараметрыПроцесса.Добавить("--extension")
        ПараметрыПроцесса.Добавить(ИмяРасширения)
    ;
    если не ИмяПользователя.Пусто()
        ПараметрыПроцесса.Добавить("--user=")
        ПараметрыПроцесса.Добавить("\"%ИмяПользователя\"")
    ;
    если не Пароль.Пусто()
        ПараметрыПроцесса.Добавить("--password=")
        ПараметрыПроцесса.Добавить(Пароль)
    ;
    
    ВыполнитьКомандуПлатформыСОжиданием(ИмяФайлаПлатформы, ПараметрыПроцесса)

    Консоль.Записать("XML файлы успешно загружены в ИБ")
;

@Глобально
метод ВыгрузитьКонфигурацию(ПутьКФайлуСборки: Строка, ПутьКИнформационнойБазе: Строка, ИмяФайлаПлатформы: Строка,
                ИмяПользователя: Строка = "", Пароль: Строка = "", ИмяРасширения: Строка = "")

    пер ПараметрыПроцесса = новый Массив<Строка>()
    ПараметрыПроцесса.Добавить("infobase")
    ПараметрыПроцесса.Добавить("config")
    ПараметрыПроцесса.Добавить("save")
    ПараметрыПроцесса.Добавить("\"%ПутьКФайлуСборки\"")
    ПараметрыПроцесса.Добавить("--db-path")
    ПараметрыПроцесса.Добавить("\"%ПутьКИнформационнойБазе\"")
    если не ИмяРасширения.Пусто()
        ПараметрыПроцесса.Добавить("--extension")
        ПараметрыПроцесса.Добавить(ИмяРасширения)
    ;
    если не ИмяПользователя.Пусто()
        ПараметрыПроцесса.Добавить("--user=")
        ПараметрыПроцесса.Добавить("\"%ИмяПользователя\"")
    ;
    если не Пароль.Пусто()
        ПараметрыПроцесса.Добавить("--password=")
        ПараметрыПроцесса.Добавить(Пароль)
    ;
    
    ВыполнитьКомандуПлатформыСОжиданием(ИмяФайлаПлатформы, ПараметрыПроцесса)

    Консоль.Записать("Файл успешно создан: %ПутьКФайлуСборки")
;

@Глобально
метод ВыгрузитьФайлыКонфигурации(ПутьКФайламПроекта: Строка, ПутьКИнформационнойБазе: Строка, ИмяФайлаПлатформы: Строка,
                    ИмяПользователя: Строка = "", Пароль: Строка = "", ИмяРасширения: Строка = "")

    пер ПараметрыПроцесса = новый Массив<Строка>()
    ПараметрыПроцесса.Добавить("infobase")
    ПараметрыПроцесса.Добавить("config")
    ПараметрыПроцесса.Добавить("export")
    ПараметрыПроцесса.Добавить("\"%ПутьКФайламПроекта\"")
    ПараметрыПроцесса.Добавить("--db-path")
    ПараметрыПроцесса.Добавить("\"%ПутьКИнформационнойБазе\"")
    если не ИмяРасширения.Пусто()
        ПараметрыПроцесса.Добавить("--extension")
        ПараметрыПроцесса.Добавить(ИмяРасширения)
    ;
    если не ИмяПользователя.Пусто()
        ПараметрыПроцесса.Добавить("--user=")
        ПараметрыПроцесса.Добавить("\"%ИмяПользователя\"")
    ;
    если не Пароль.Пусто()
        ПараметрыПроцесса.Добавить("--password=")
        ПараметрыПроцесса.Добавить(Пароль)
    ;
    ВыполнитьКомандуПлатформыСОжиданием(ИмяФайлаПлатформы, ПараметрыПроцесса)

    Консоль.Записать("XML файлы успешно выгружены: %ПутьКФайламПроекта")
;

метод ВыполнитьКомандуПлатформыСОжиданием(имяКоманды: Строка, параметры: Массив<Строка>, таймаут: Длительность = 0с)
    
    знч параметрыСтрокой = Строки.Соединить(параметры, " ")
    Консоль.Записать("=================================================================")
    Консоль.Записать("\"%имяКоманды\" %параметрыСтрокой")
    Консоль.Записать("=================================================================")
    пер процесс = новый ПроцессОс(имяКоманды, параметры)
    процесс.Запустить()

    пер времяОжидания = 0с

    пока не процесс.ОжидатьЗавершения(60с) и процесс.Живой()
        
        если таймаут != 0с и таймаут <= времяОжидания
            пер текстОшибки = "При выполнении команды платформы превышено время ожидания выполнения %таймаут"
            процесс.Остановить()
            выбросить новый ИсключениеНедопустимоеСостояние(текстОшибки)
        ;
        времяОжидания += 60с
    ;

    пер кодВозврата = Неопределено
    
    кодВозврата = процесс.ПолучитьКодВозврата()
    знч ТекстЛога = процесс.ПолучитьПотокВывода().ПрочитатьКакСтроку(КОДИРОВКА)
    Консоль.Записать(ТекстЛога)

    если процесс.Живой()
        процесс.Остановить()
    ;

    если кодВозврата == 0 или кодВозврата == Неопределено
        возврат
    ;

    Консоль.Записать("Код возврата: %кодВозврата")

    выбросить новый ИсключениеНедопустимоеСостояние()
;