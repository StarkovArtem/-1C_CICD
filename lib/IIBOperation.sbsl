#!/usr/bin/executor

#требуется ILogging.sbsl
#требуется oc_main.sbsl
#требуется oc_batch_mode.sbsl
#требуется oc_ibsrv.sbsl

// ПрограммныйИнтерфейс

@Глобально
метод СоздатьИнформационнуюБазу(СтрокаДоступа: Строка, ПутьКФайламПлатформы: Строка, РежимИсполнения: oc_main.РежимыИсполнения)

    знч ВремяИсполненияОпераций = новый ILogging.ВремяИсполненияОпераций()
    Консоль.Записать("\нCreateInfobase:")

    знч ИспользуетсяАвтономныйСервер = РежимИсполнения == oc_main.РежимыИсполнения.АвтономныйСервер
    ВремяИсполненияОпераций.НачатьЗамер("СоздатьИнформационнуюБазу")

    если ИспользуетсяАвтономныйСервер и не oc_main.ЭтоСервернаяИБ(СтрокаДоступа)
        знч ИсполняемыйФайлПлатформы = oc_main.ИсполняемыйФайлПлатформы(ПутьКФайламПлатформы, Истина)
        знч ПутьКИнформационнойБазе = oc_main.ПреобразоватьВПутьКИнформационнойБазе(СтрокаДоступа)
        oc_ibsrv.СоздатьИнформационнуюБазу(
            ПутьКИнформационнойБазе,
            ИсполняемыйФайлПлатформы)
    иначе
        знч ИсполняемыйФайлПлатформы = oc_main.ИсполняемыйФайлПлатформы(ПутьКФайламПлатформы, Ложь)
        знч СтрокаСоединения = oc_main.ПреобразоватьВСтрокуСоединения(СтрокаДоступа)
        oc_batch_mode.СоздатьИнформационнуюБазу(
            СтрокаСоединения,
            ИсполняемыйФайлПлатформы)
    ;

    ВремяИсполненияОпераций.ЗавершитьЗамер("СоздатьИнформационнуюБазу")
;

@Глобально
метод ЗагрузитьКонфигурацию(ПутьКФайлуСборки: Строка, СтрокаДоступа: Строка, ПутьКФайламПлатформы: Строка, РежимИсполнения: oc_main.РежимыИсполнения,
            ИмяПользователя: Строка = "", Пароль: Строка = "", ИмяРасширения: Строка = "")

    знч ВремяИсполненияОпераций = новый ILogging.ВремяИсполненияОпераций()
    Консоль.Записать("\нLoadFromFile:")

    знч ИспользуетсяАвтономныйСервер = РежимИсполнения == oc_main.РежимыИсполнения.АвтономныйСервер
    ВремяИсполненияОпераций.НачатьЗамер("ЗагрузитьКонфигурацию")

    если ИспользуетсяАвтономныйСервер и не oc_main.ЭтоСервернаяИБ(СтрокаДоступа)
        знч ИсполняемыйФайлПлатформы = oc_main.ИсполняемыйФайлПлатформы(ПутьКФайламПлатформы, Истина)
        знч ПутьКИнформационнойБазе = oc_main.ПреобразоватьВПутьКИнформационнойБазе(СтрокаДоступа)
        oc_ibsrv.ЗагрузитьКонфигурацию(
            ПутьКФайлуСборки,
            ПутьКИнформационнойБазе,
            ИсполняемыйФайлПлатформы,
            ИмяПользователя,
            Пароль,
            ИмяРасширения)
    иначе
        знч ИсполняемыйФайлПлатформы = oc_main.ИсполняемыйФайлПлатформы(ПутьКФайламПлатформы, Ложь)
        знч СтрокаСоединения = oc_main.ПреобразоватьВСтрокуСоединения(СтрокаДоступа)
        oc_batch_mode.ЗагрузитьКонфигурацию(
            ПутьКФайлуСборки,
            СтрокаСоединения,
            ИсполняемыйФайлПлатформы,
            ИмяПользователя,
            Пароль,
            ИмяРасширения)
    ;

    ВремяИсполненияОпераций.ЗавершитьЗамер("ЗагрузитьКонфигурацию")
;

@Глобально
метод ЗагрузитьФайлыКонфигурации(ПутьКФайлуСборки: Строка, СтрокаДоступа: Строка, ПутьКФайламПлатформы: Строка, РежимИсполнения: oc_main.РежимыИсполнения,
            ИмяПользователя: Строка = "", Пароль: Строка = "", ИмяРасширения: Строка = "", ФайлыДляЗагрузки: Файл|Строка = "")

    пер ПутьФайлЗагрузки = ""
    если ФайлыДляЗагрузки.ПолучитьТип() == Тип<Файл>
        если (ФайлыДляЗагрузки как Файл).Существует()
            ПутьФайлЗагрузки = (ФайлыДляЗагрузки как Файл).Путь
        ;
    иначе
        знч НастройкиВыгрузки = ПолучитьНастройкиЗагрузкиВыгрузки(ПутьКФайлуСборки, ФайлыДляЗагрузки как Массив<Строка>|Строка, "in")
        ПутьФайлЗагрузки = НастройкиВыгрузки.Получить("ПутьФайлЗагрузкиВыгрузки") как Строка
    ;

    знч ВремяИсполненияОпераций = новый ILogging.ВремяИсполненияОпераций()
    Консоль.Записать("\нLoadFromFiles:")
    знч ИспользуетсяАвтономныйСервер = РежимИсполнения == oc_main.РежимыИсполнения.АвтономныйСервер
    ВремяИсполненияОпераций.НачатьЗамер("ЗагрузитьФайлыКонфигурации")

    если ИспользуетсяАвтономныйСервер и не oc_main.ЭтоСервернаяИБ(СтрокаДоступа)
        знч ИсполняемыйФайлПлатформы = oc_main.ИсполняемыйФайлПлатформы(ПутьКФайламПлатформы, Истина)
        знч ПутьКИнформационнойБазе = oc_main.ПреобразоватьВПутьКИнформационнойБазе(СтрокаДоступа)
        oc_ibsrv.ЗагрузитьФайлыКонфигурации(
            ПутьКФайлуСборки,
            ПутьКИнформационнойБазе,
            ИсполняемыйФайлПлатформы,
            ИмяПользователя,
            Пароль,
            ИмяРасширения,
            ПутьФайлЗагрузки)
    иначе
        знч ИсполняемыйФайлПлатформы = oc_main.ИсполняемыйФайлПлатформы(ПутьКФайламПлатформы, Ложь)
        знч СтрокаСоединения = oc_main.ПреобразоватьВСтрокуСоединения(СтрокаДоступа)
        oc_batch_mode.ЗагрузитьФайлыКонфигурации(
            ПутьКФайлуСборки,
            СтрокаСоединения,
            ИсполняемыйФайлПлатформы,
            ИмяПользователя,
            Пароль,
            ИмяРасширения,
            ПутьФайлЗагрузки)
    ;

    ВремяИсполненияОпераций.ЗавершитьЗамер("ЗагрузитьФайлыКонфигурации")
;

@Глобально
метод ВыгрузитьКонфигурацию(ПутьКФайлуСборки: Строка, СтрокаДоступа: Строка, ПутьКФайламПлатформы: Строка, РежимИсполнения: oc_main.РежимыИсполнения,
            ИмяПользователя: Строка = "", Пароль: Строка = "", ИмяРасширения: Строка = "")

    знч ВремяИсполненияОпераций = новый ILogging.ВремяИсполненияОпераций()
    Консоль.Записать("\нDump:")

    знч ИспользуетсяАвтономныйСервер = РежимИсполнения == oc_main.РежимыИсполнения.АвтономныйСервер
    ВремяИсполненияОпераций.НачатьЗамер("ВыгрузитьКонфигурацию")

    если ИспользуетсяАвтономныйСервер и не oc_main.ЭтоСервернаяИБ(СтрокаДоступа)
        знч ИсполняемыйФайлПлатформы = oc_main.ИсполняемыйФайлПлатформы(ПутьКФайламПлатформы, Истина)
        знч ПутьКИнформационнойБазе = oc_main.ПреобразоватьВПутьКИнформационнойБазе(СтрокаДоступа)
        oc_ibsrv.ВыгрузитьКонфигурацию(
            ПутьКФайлуСборки,
            ПутьКИнформационнойБазе,
            ИсполняемыйФайлПлатформы,
            ИмяПользователя,
            Пароль,
            ИмяРасширения)
    иначе
        знч ИсполняемыйФайлПлатформы = oc_main.ИсполняемыйФайлПлатформы(ПутьКФайламПлатформы, Ложь)
        знч СтрокаСоединения = oc_main.ПреобразоватьВСтрокуСоединения(СтрокаДоступа)
        oc_batch_mode.ВыгрузитьКонфигурацию(
            ПутьКФайлуСборки,
            СтрокаСоединения,
            ИсполняемыйФайлПлатформы,
            ИмяПользователя,
            Пароль,
            ИмяРасширения)
    ;

    ВремяИсполненияОпераций.ЗавершитьЗамер("ВыгрузитьКонфигурацию")
;

@Глобально
метод ВыгрузитьФайлыКонфигурации(ПутьКФайлуСборки: Строка, СтрокаДоступа: Строка, ПутьКФайламПлатформы: Строка, РежимИсполнения: oc_main.РежимыИсполнения,
            ИмяПользователя: Строка = "", Пароль: Строка = "", ИмяРасширения: Строка, ФайлыДляВыгрузки: Массив<Строка>|Строка|Файл = "", ПутьКФайлуВерсии = "")

    пер ПутьФайлВыгрузки = ""
    пер ТолькоDumpConfig = Ложь
    если ФайлыДляВыгрузки.ПолучитьТип() == Тип<Файл>
        если (ФайлыДляВыгрузки как Файл).Существует()
            ПутьФайлВыгрузки = (ФайлыДляВыгрузки как Файл).Путь
        ;
    иначе
        знч НастройкиВыгрузки = ПолучитьНастройкиЗагрузкиВыгрузки(ПутьКФайлуСборки, ФайлыДляВыгрузки как Массив<Строка>|Строка, "out")
        ПутьФайлВыгрузки = НастройкиВыгрузки.Получить("ПутьФайлЗагрузкиВыгрузки") как Строка
        ТолькоDumpConfig = НастройкиВыгрузки.Получить("ВыгружатьDumpConfig") как Булево
    ;

    знч ВремяИсполненияОпераций = новый ILogging.ВремяИсполненияОпераций()
    если ТолькоDumpConfig
        Консоль.Записать("\нDumpFiles(Config dump info):")
    иначе
        Консоль.Записать("\нDumpFiles:")
    ;

    знч ИспользуетсяАвтономныйСервер = РежимИсполнения == oc_main.РежимыИсполнения.АвтономныйСервер
    ВремяИсполненияОпераций.НачатьЗамер("ВыгрузитьФайлыКонфигурации")

    если ИспользуетсяАвтономныйСервер и не oc_main.ЭтоСервернаяИБ(СтрокаДоступа)

        знч ИсполняемыйФайлПлатформы = oc_main.ИсполняемыйФайлПлатформы(ПутьКФайламПлатформы, Истина)
        знч ПутьКИнформационнойБазе = oc_main.ПреобразоватьВПутьКИнформационнойБазе(СтрокаДоступа)

        если ТолькоDumpConfig

            oc_ibsrv.ВыгрузитьФайлыКонфигурации(
                ПутьКФайлуСборки,
                ПутьКИнформационнойБазе,
                ИсполняемыйФайлПлатформы,
                ИмяПользователя,
                Пароль,
                ИмяРасширения,
                ТолькоDumpConfig)
        иначе

            oc_ibsrv.ВыгрузитьФайлыКонфигурации(
                ПутьКФайлуСборки,
                ПутьКИнформационнойБазе,
                ИсполняемыйФайлПлатформы,
                ИмяПользователя,
                Пароль,
                ИмяРасширения,
                Ложь,
                ПутьФайлВыгрузки,
                ПутьКФайлуВерсии)
        ;

    иначе

        знч ИсполняемыйФайлПлатформы = oc_main.ИсполняемыйФайлПлатформы(ПутьКФайламПлатформы, Ложь)
        знч СтрокаСоединения = oc_main.ПреобразоватьВСтрокуСоединения(СтрокаДоступа)

        если ТолькоDumpConfig

            oc_batch_mode.ВыгрузитьФайлыКонфигурации(
                ПутьКФайлуСборки,
                СтрокаСоединения,
                ИсполняемыйФайлПлатформы,
                ИмяПользователя,
                Пароль,
                ИмяРасширения,
                ТолькоDumpConfig,
                "")
        иначе

            oc_batch_mode.ВыгрузитьФайлыКонфигурации(
                ПутьКФайлуСборки,
                СтрокаСоединения,
                ИсполняемыйФайлПлатформы,
                ИмяПользователя,
                Пароль,
                ИмяРасширения,
                Ложь,
                ПутьФайлВыгрузки,
                ПутьКФайлуВерсии)
        ;
    ;

    ВремяИсполненияОпераций.ЗавершитьЗамер("ВыгрузитьФайлыКонфигурации")
;

@Глобально
метод ПолучитьСтатусКонфигурации(ПутьКФайлуСтатуса: Строка, СтрокаДоступа: Строка, ПутьКФайламПлатформы: Строка, РежимИсполнения: oc_main.РежимыИсполнения,
            ИмяПользователя: Строка = "", Пароль: Строка = "", ИмяРасширения: Строка = "", ПутьКФайлуВерсии = "") : Число

    знч ВремяИсполненияОпераций = новый ILogging.ВремяИсполненияОпераций()
    Консоль.Записать("\нDumpFiles(Status):")

    знч ИспользуетсяАвтономныйСервер = РежимИсполнения == oc_main.РежимыИсполнения.АвтономныйСервер
    ВремяИсполненияОпераций.НачатьЗамер("ВыгрузитьКонфигурацию")

    пер СтатусКонфигурации = 0

    если ИспользуетсяАвтономныйСервер и не oc_main.ЭтоСервернаяИБ(СтрокаДоступа)
        знч ИсполняемыйФайлПлатформы = oc_main.ИсполняемыйФайлПлатформы(ПутьКФайламПлатформы, Истина)
        знч ПутьКИнформационнойБазе = oc_main.ПреобразоватьВПутьКИнформационнойБазе(СтрокаДоступа)

        oc_ibsrv.ПолучитьСтатусКонфигурации(
            ПутьКФайлуСтатуса,
            ПутьКИнформационнойБазе,
            ИсполняемыйФайлПлатформы,
            ИмяПользователя,
            Пароль,
            ИмяРасширения,
            ПутьКФайлуВерсии)

        знч Статус = (новый Файл(ПутьКФайлуСтатуса)).ОткрытьПотокЧтения().ПрочитатьКакСтроку()
        если Статус.Найти("modified: all") >= 0
            СтатусКонфигурации = 2
        иначе если не Статус.Пусто()
            СтатусКонфигурации = 1
        ;

    иначе
        знч ИсполняемыйФайлПлатформы = oc_main.ИсполняемыйФайлПлатформы(ПутьКФайламПлатформы, Ложь)
        знч СтрокаСоединения = oc_main.ПреобразоватьВСтрокуСоединения(СтрокаДоступа)
        oc_batch_mode.ПолучитьСтатусКонфигурации(
            ПутьКФайлуСтатуса,
            СтрокаСоединения,
            ИсполняемыйФайлПлатформы,
            ИмяПользователя,
            Пароль,
            ИмяРасширения,
            ПутьКФайлуВерсии)

        знч Статус = (новый Файл(ПутьКФайлуСтатуса)).ОткрытьПотокЧтения().ПрочитатьКакСтроку()
        если Статус.Найти("FullDump") >= 0
            СтатусКонфигурации = 2
        иначе если не Статус.Пусто()
            СтатусКонфигурации = 1
        ;
    ;

    ВремяИсполненияОпераций.ЗавершитьЗамер("ПолучитьСтатусКонфигурации")

    возврат СтатусКонфигурации
;

@Глобально
метод ВыполнитьПроверкуКонфигурации(СтрокаДоступа: Строка, ПутьКФайламПлатформы: Строка,
            ИмяПользователя: Строка = "", Пароль: Строка = "", ИмяРасширения: Строка = "", Проверки: Множество<Строка>)

    знч ВремяИсполненияОпераций = новый ILogging.ВремяИсполненияОпераций()
    Консоль.Записать("\нCheck:")

    ВремяИсполненияОпераций.НачатьЗамер("ВыполнитьПроверкуКонфигурации")

    знч ИсполняемыйФайлПлатформы = oc_main.ИсполняемыйФайлПлатформы(ПутьКФайламПлатформы, Ложь)
    знч СтрокаСоединения = oc_main.ПреобразоватьВСтрокуСоединения(СтрокаДоступа)
    oc_batch_mode.ВыполнитьПроверкуКонфигурации(
        СтрокаСоединения,
        ИсполняемыйФайлПлатформы,
        ИмяПользователя,
        Пароль,
        ИмяРасширения,
        Проверки)

    ВремяИсполненияОпераций.ЗавершитьЗамер("ВыполнитьПроверкуКонфигурации")
;

@Глобально
метод СравнитьКонфигурации(ПутьКФайлуОтчета: Строка, СтрокаДоступа: Строка, ПутьКФайламПлатформы: Строка,
                    ИмяПользователя: Строка = "", Пароль: Строка = "", РежимСравнения: oc_main.РежимыСравнения, ИмяКонфигурацииПоставщика = "")

    знч ВремяИсполненияОпераций = новый ILogging.ВремяИсполненияОпераций()
    Консоль.Записать("\нCompareCfg:")

    знч ИсполняемыйФайлПлатформы = oc_main.ИсполняемыйФайлПлатформы(ПутьКФайламПлатформы, Ложь)
    ВремяИсполненияОпераций.НачатьЗамер("СравнитьКонфигурации")

    знч ПерваяКонфигурация = "MainConfiguration"
    знч ВтораяКонфигурация = (РежимСравнения == oc_main.РежимыСравнения.СравнитьСКонфигурациейИБ)
        ? "DBConfiguration"
        : "VendorConfiguration"

    знч СтрокаСоединения = oc_main.ПреобразоватьВСтрокуСоединения(СтрокаДоступа)
    oc_batch_mode.СравнитьКонфигурации(ПутьКФайлуОтчета,
        СтрокаСоединения,
        ИсполняемыйФайлПлатформы,
        ИмяПользователя,
        Пароль,
        ПерваяКонфигурация,
        ВтораяКонфигурация,
        ИмяКонфигурацииПоставщика)

    ВремяИсполненияОпераций.ЗавершитьЗамер("СравнитьКонфигурации")
;

// СлужебныеПроцедурыИФункции

@Локально
метод ПолучитьНастройкиЗагрузкиВыгрузки(ПутьКФайлуСборки: Строка, ФайлыКонфигурации: Массив<Строка>|Строка, ТипЗагрузкиВыгрузки: Строка) : Соответствие<Строка, Строка|Булево>

    пер ФайлыЗагрузкиВыгрузки = новый Массив<Строка>()

    если ФайлыКонфигурации.ПолучитьТип() == Тип<Строка>
        ФайлыЗагрузкиВыгрузки = (ФайлыКонфигурации как Строка).Разделить(",", Ложь)
    иначе если ФайлыЗагрузкиВыгрузки.ПолучитьТип() == Тип<Массив<Строка>>
        ФайлыЗагрузкиВыгрузки = ФайлыКонфигурации как Массив<Строка>
    ;

    пер ТекстФайлаЗагрузкиВыгрузки = ""
    пер ВыгружатьDumpConfig = Ложь

    для ПутьКФайлу из ФайлыЗагрузкиВыгрузки
        если ПутьКФайлу.ЗаканчиваетсяНа("ConfigDumpInfo.xml")
            ВыгружатьDumpConfig = Истина
            продолжить
        ;
        ТекстФайлаЗагрузкиВыгрузки = ТекстФайлаЗагрузкиВыгрузки + ПутьКФайлу + Символы.НОВАЯ_СТРОКА
    ;

    знч Результат = новый Соответствие<Строка, Строка|Булево>()
    
    пер ПутьФайлЗагрузкиВыгрузки = ""
    если не ТекстФайлаЗагрузкиВыгрузки.Пусто()
        ПутьФайлЗагрузкиВыгрузки = ПутьКФайлуСборки + "_" + ТипЗагрузкиВыгрузки
        пер ФайлЗагрузкиВыгрузки = новый Файл(ПутьФайлЗагрузкиВыгрузки)
        если ФайлЗагрузкиВыгрузки.Существует()
            Файлы.Удалить(ФайлЗагрузкиВыгрузки)
        ;
        ФайлЗагрузкиВыгрузки = Файлы.Создать(ПутьФайлЗагрузкиВыгрузки)
        ФайлЗагрузкиВыгрузки.ОткрытьПотокЗаписи().Записать(ТекстФайлаЗагрузкиВыгрузки).Закрыть()
    ;

    Результат.Вставить("ПутьФайлЗагрузкиВыгрузки", ПутьФайлЗагрузкиВыгрузки)
    Результат.Вставить("ВыгружатьDumpConfig",      ВыгружатьDumpConfig)

    возврат Результат
;