#!/usr/bin/executor

#требуется oc_main.sbsl
#требуется ILogging.sbsl
#требуется IConfiguration.sbsl

конст ИМЯ_ФАЙЛА_НАСТРОЕК = "project_config.json"
конст ИМЯ_ФАЙЛА_ПОЛЬЗ_НАСТРОЕК = "project_user_prop.json" // файл пользовательских настроек в каталоге BIN_DIR
@Глобально
конст ИМЯ_КАТАЛОГА_ПАТЧА = "cf_patch"
@Глобально
конст ИМЯ_КАТАЛОГА_КОНФИГУРАЦИИ = "cf"
@Глобально
конст ИМЯ_КАТАЛОГА_РАСШИРЕНИЙ = "cfe"
@Глобально
конст ИМЯ_КАТАЛОГА_КОНФИГУРАЦИИ_ПОСТАВЩИКА = "cf_prod"
конст ИМЯ_ВРЕМЕННОГО_КАТАЛОГА = ".1ccicd"
конст ИМЯ_КАТАЛОГА_ИСХОДНИКОВ = "src"
конст ИМЯ_КАТАЛОГА_СБОРКИ = "bin"

@Глобально
структура Настройки

    знч EXT_NAMES: Массив<Строка> // Имена расширений
    знч CHECK: Массив<Строка>     // Типы проверок
    знч BIN_DIR: Строка           // Каталог, в котором соберутся файлы cf и cfe
    знч SRC_CF: Строка            // Каталог выгрузки файлов конфигурации в формате xml
    знч SRC_CFE: Строка           // Каталог выгрузки файлов расширений в формате xml
    знч PLATFORM_VERSION: Строка  // Версия платформы

    @Глобально
    статический метод Прочитать(ПутьКНастройкам : Строка): Настройки

        пер ФайлНастроек = новый Файл(oc_main.ДобавитьЧастьПути(ПутьКНастройкам, [ИМЯ_ФАЙЛА_НАСТРОЕК]))
        если не ФайлНастроек.Существует()
            Записать(ПутьКНастройкам, "")
        ;
        исп ПотокЧтения = ФайлНастроек.ОткрытьПотокЧтения()
        пер ПрочитанныеНастройки = СериализацияJson.ПрочитатьОбъект(ПотокЧтения, Тип<Настройки>)
        ПотокЧтения.Закрыть()

        пер BIN_DIR = oc_main.ИсправитьРазделителиПути(ПрочитанныеНастройки.BIN_DIR)
        пер SRC_CF  = oc_main.ИсправитьРазделителиПути(ПрочитанныеНастройки.SRC_CF)
        пер SRC_CFE = oc_main.ИсправитьРазделителиПути(ПрочитанныеНастройки.SRC_CFE)

        ПрочитанныеНастройки = новый Настройки(
            ПрочитанныеНастройки.EXT_NAMES,
            ПрочитанныеНастройки.CHECK,
            BIN_DIR,
            SRC_CF,
            SRC_CFE,
            ПрочитанныеНастройки.PLATFORM_VERSION
        )

        возврат ПрочитанныеНастройки
    ;

    @Глобально
    статический метод Записать(ПутьКНастройкам: Строка, ВерсияПлатформы: Строка) : Булево

        пер ФайлНастроек = новый Файл(oc_main.ДобавитьЧастьПути(ПутьКНастройкам, [ИМЯ_ФАЙЛА_НАСТРОЕК]))
        знч Настройки = новый Настройки(
            ["*"],
            [],
            ИМЯ_КАТАЛОГА_СБОРКИ,
            oc_main.ДобавитьЧастьПути(ИМЯ_КАТАЛОГА_ИСХОДНИКОВ, [ИМЯ_КАТАЛОГА_КОНФИГУРАЦИИ]),
            oc_main.ДобавитьЧастьПути(ИМЯ_КАТАЛОГА_ИСХОДНИКОВ, [ИМЯ_КАТАЛОГА_РАСШИРЕНИЙ]),
            ВерсияПлатформы
        )

        исп ПотокЗаписи = ФайлНастроек.ОткрытьПотокЗаписи()
        СериализацияJson.ЗаписатьОбъект(ПотокЗаписи, Настройки)
        ПотокЗаписи.Закрыть()

        возврат Истина
    ;
;

@Глобально
структура ПользовательскиеНастройки

    пер HASH: Соответствие<Строка, Строка>
    знч CHECK: Массив<Строка>
    знч IB_CONNECTION_STRING: Строка
    знч IB_PLATFORM_VERSION: Строка
    пер IB_LOGIN: Строка
    пер IB_PASSWD: Строка
    знч TEMP: Строка
    знч CFE_BUILD_MODE: Число // 1 - собирать расширения в пустой конфигурации, 2 - собирать расширения относительно основной конфигурации
    знч EXEC_MODE: Число      // 1 - 1сv8, 2 - ibsrv, 3 - ssh
    знч CFE_EXEC_MODE: Число  // 1 - 1сv8, 2 - ibsrv, 3 - ssh
    знч PATH_1C: Строка

    @Глобально
    статический метод Прочитать(ПутьКНастройкам: Строка, ВвестиЛогинПароль = Ложь): ПользовательскиеНастройки

        знч ФайлНастроек = новый Файл(oc_main.ДобавитьЧастьПути(ПутьКНастройкам, [ИМЯ_ФАЙЛА_ПОЛЬЗ_НАСТРОЕК]))
        пер ПользовательскиеНастройки = новый ПользовательскиеНастройки(
            новый Соответствие<Строка, Строка>(),
            новый Массив<Строка>(),
            "",
            "",
            "",
            "",
            oc_main.ДобавитьЧастьПути(ИМЯ_КАТАЛОГА_СБОРКИ, [ИМЯ_ВРЕМЕННОГО_КАТАЛОГА]),
            2,
            1,
            1,
            ""
        )
        если не ФайлНастроек.Существует()
            Файлы.СоздатьКаталог("%{ПутьКНастройкам}")
            исп ПотокЗаписи = ФайлНастроек.ОткрытьПотокЗаписи()
            СериализацияJson.ЗаписатьОбъект(ПотокЗаписи, ПользовательскиеНастройки)
            ПотокЗаписи.Закрыть()
        иначе
            исп ПотокЧтения = ФайлНастроек.ОткрытьПотокЧтения()
            ПользовательскиеНастройки = СериализацияJson.ПрочитатьОбъект(ПотокЧтения, Тип<ПользовательскиеНастройки>)
            ПотокЧтения.Закрыть()

            пер TEMP = oc_main.ИсправитьРазделителиПути(ПользовательскиеНастройки.TEMP)
            если TEMP.Пусто()
                TEMP = oc_main.ДобавитьЧастьПути(ИМЯ_КАТАЛОГА_СБОРКИ, [ИМЯ_ВРЕМЕННОГО_КАТАЛОГА])
            ;
            пер PATH_1C = oc_main.ИсправитьРазделителиПути(ПользовательскиеНастройки.PATH_1C)

            ПользовательскиеНастройки = новый ПользовательскиеНастройки(
                ПользовательскиеНастройки.HASH,
                ПользовательскиеНастройки.CHECK,
                ПользовательскиеНастройки.IB_CONNECTION_STRING,
                ПользовательскиеНастройки.IB_PLATFORM_VERSION,
                ПользовательскиеНастройки.IB_LOGIN,
                ПользовательскиеНастройки.IB_PASSWD,
                TEMP,
                ПользовательскиеНастройки.CFE_BUILD_MODE,
                ПользовательскиеНастройки.EXEC_MODE,
                ПользовательскиеНастройки.CFE_EXEC_MODE,
                PATH_1C
            )
        ;

        если ВвестиЛогинПароль и не ПользовательскиеНастройки.IB_CONNECTION_STRING.Пусто() и ПользовательскиеНастройки.IB_LOGIN.Пусто()
            ПользовательскиеНастройки.IB_LOGIN = Консоль.СчитатьСтроку("Введите логин:\н")
        ;

        если ВвестиЛогинПароль и не ПользовательскиеНастройки.IB_LOGIN.Пусто() и ПользовательскиеНастройки.IB_PASSWD.Пусто()
            ПользовательскиеНастройки.IB_PASSWD = Консоль.СчитатьПароль("Введите пароль:\н")
        ;

        возврат ПользовательскиеНастройки
    ;

    @Глобально
    статический метод Записать(ПутьКНастройкам: Строка, ПараметрыПроекта: ПараметрыПроекта)

        знч Настройки = Настройки.Прочитать(ПутьКНастройкам)

        знч Хеши = новый Соответствие<Строка, Строка>()
        Хеши.Вставить(ИМЯ_КАТАЛОГА_КОНФИГУРАЦИИ, ПараметрыПроекта.ПутьКФайламКонфигурации.Хеш)
        Хеши.Вставить(ИМЯ_КАТАЛОГА_КОНФИГУРАЦИИ_ПОСТАВЩИКА, ПараметрыПроекта.ПутьКФайламКонфигурацииПоставщика.Хеш)
        для Расширение из ПараметрыПроекта.Расширения
            Хеши.Вставить(Расширение.Ключ, Расширение.Значение.Хеш)
        ;

        знч ПредыдущиеПользовательскиеНастройки = ПользовательскиеНастройки.Прочитать(
            oc_main.ДобавитьЧастьПути(ПутьКНастройкам, [ПараметрыПроекта.ПутьКСборкеПроекта.ОтносительныйПуть]),
            Ложь)

        знч ПользовательскиеНастройки = новый ПользовательскиеНастройки(
            Хеши,
            ПараметрыПроекта.Проверки == Настройки.CHECK ? новый Массив<Строка>() : ПараметрыПроекта.Проверки,
            ПараметрыПроекта.ПараметрыСоединенияИБ.СтрокаСоединения,
            ПараметрыПроекта.ПараметрыСоединенияИБ.ВерсияПлатформы,
            ПараметрыПроекта.ПараметрыСоединенияИБ.Логин,
            ПараметрыПроекта.ПараметрыСоединенияИБ.Пароль,
            ПараметрыПроекта.ПутьКВременнымФайлам.ОтносительныйПуть,
            ПараметрыПроекта.РежимСборкиПроектаРасширения.Индекс + 1,
            ПараметрыПроекта.РежимИСполнения.Индекс + 1,
            ПараметрыПроекта.РежимИСполненияРасширения.Индекс + 1,
            ПредыдущиеПользовательскиеНастройки.PATH_1C
        )

        исп ПотокЗаписи = новый Файл(
            oc_main.ДобавитьЧастьПути(
                ПутьКНастройкам,
                [ПараметрыПроекта.ПутьКСборкеПроекта.ОтносительныйПуть, ИМЯ_ФАЙЛА_ПОЛЬЗ_НАСТРОЕК]
            )).ОткрытьПотокЗаписи()
        СериализацияJson.ЗаписатьОбъект(ПотокЗаписи, ПользовательскиеНастройки)
        ПотокЗаписи.Закрыть()

    ;
;

@Глобально
структура ПараметрыСоединенияИБ

    пер СтрокаСоединения: Строка
    пер ВерсияПлатформы: Строка
    пер ПутьКФайламПлатформы: Строка
    пер Логин: Строка
    пер Пароль: Строка
;

@Глобально
структура ПутьКФайламПроекта

    знч Имя: Строка
    знч Путь: Строка
    знч ОтносительныйПуть: Строка
    знч ЭтоРасширение: Булево
    пер Хеш: Строка
;

@Глобально
перечисление РежимыСборкиПроекта

    ВПустойКонфигурации
    ВОсновнойКонфигурации

;

@Глобально
структура ПараметрыПроекта

    знч РабочийКаталог: Строка                               // Рабочий каталог выполнения скрипта
    знч ПутьКСкриптуИсполнения: ПутьКФайламПроекта
    знч ПутьКСборкеПроекта: ПутьКФайламПроекта                // Путь к собранным файлам проекта
    знч ПутьКФайламКонфигурации: ПутьКФайламПроекта           // Путь к исходным файлам конфигурации проекта
    пер ФайлВерсийКонфигурации: Файл | Неопределено
    знч ПутьКФайламКонфигурацииПоставщика: ПутьКФайламПроекта // Путь к исходным файлам конфигурации поставщика проекта
    знч ПутьКВременнымФайлам: ПутьКФайламПроекта              // Путь к временным файлам конфигурации поставщика проекта
    знч Расширения: Соответствие<Строка, ПутьКФайламПроекта>  // Путь к исходным файлам расширений проекта
    знч РежимСборкиПроектаРасширения: РежимыСборкиПроекта
                    = РежимыСборкиПроекта.ВПустойКонфигурации // Режим сборки бинарный файлов проекта
    знч РежимИСполнения: oc_main.РежимыИсполнения
                    = oc_main.РежимыИсполнения.Платформа      // Режим запуска сборки файлов проекта
    знч РежимИСполненияРасширения: oc_main.РежимыИсполнения
                    = oc_main.РежимыИсполнения.Платформа      // Режим запуска сборки файлов расширения проекта
    знч ПутьКФайламПлатформы: Строка                          // Путь к исполняемым файлу платформы
    знч ПараметрыСоединенияИБ: ПараметрыСоединенияИБ
    знч Проверки: Массив<Строка>

    @Глобально
    статический метод Инициализировать(ПутьКНастройкам: Строка, ВвестиЛогинПароль = Ложь) : ПараметрыПроекта

        знч Настройки = Настройки.Прочитать(ПутьКНастройкам)
        знч РабочийКаталог = Скрипт.ПолучитьРабочийКаталог()

        пер Проверки = Настройки.CHECK

        пер ПутьКСкриптуИсполненияСтрокой = oc_main.УдалитьЧастьПути(Скрипт.ПутьНачальногоСкрипта, [РабочийКаталог])

        знч ПутьКСкриптуИсполнения = новый ПутьКФайламПроекта(
            "",
            Скрипт.ПутьНачальногоСкрипта,
            ПутьКСкриптуИсполненияСтрокой,
            Ложь,
            "")

        знч ПутьКСборкеПроекта = новый ПутьКФайламПроекта(
            "",
            oc_main.ДобавитьЧастьПути(РабочийКаталог, [Настройки.BIN_DIR]),
            Настройки.BIN_DIR,
            Ложь,
            "")

        знч ПользовательскиеНастройки =
            ПользовательскиеНастройки.Прочитать(
                oc_main.ДобавитьЧастьПути(ПутьКНастройкам, [ПутьКСборкеПроекта.ОтносительныйПуть]),
                ВвестиЛогинПароль)
        если ПользовательскиеНастройки.CHECK.Размер() > 0
            Проверки = ПользовательскиеНастройки.CHECK
        ;

        знч ПутьКФайламКонфигурации = новый ПутьКФайламПроекта(
            "",
            oc_main.ДобавитьЧастьПути(РабочийКаталог, [Настройки.SRC_CF]),
            Настройки.SRC_CF,
            Ложь,
            ПользовательскиеНастройки.HASH.ПолучитьИлиУмолчание(ИМЯ_КАТАЛОГА_КОНФИГУРАЦИИ, "")
        )

        знч ПутьКФайламКонфигурацииПоставщика = новый ПутьКФайламПроекта(
            "",
            oc_main.ДобавитьЧастьПути(РабочийКаталог, [Настройки.BIN_DIR, "prod"]),
            oc_main.ДобавитьЧастьПути(Настройки.BIN_DIR, ["prod"]),
            Ложь,
            ПользовательскиеНастройки.HASH.ПолучитьИлиУмолчание(ИМЯ_КАТАЛОГА_КОНФИГУРАЦИИ_ПОСТАВЩИКА, "")
        )

        знч ПутиКФайламРасширений = новый Соответствие<Строка, ПутьКФайламПроекта>()
        для ИмяРасширения из Настройки.EXT_NAMES
            если ИмяРасширения == ИМЯ_КАТАЛОГА_КОНФИГУРАЦИИ
                или ИмяРасширения == ИМЯ_КАТАЛОГА_КОНФИГУРАЦИИ_ПОСТАВЩИКА
                или ИмяРасширения == ИМЯ_КАТАЛОГА_ПАТЧА
                продолжить
            ;
            знч ПутьКФайламПроекта = новый ПутьКФайламПроекта(
                ИмяРасширения,
                oc_main.ДобавитьЧастьПути(РабочийКаталог, [Настройки.SRC_CFE, ИмяРасширения]),
                oc_main.ДобавитьЧастьПути(Настройки.SRC_CFE, [ИмяРасширения]),
                Истина,
                ПользовательскиеНастройки.HASH.ПолучитьИлиУмолчание(ИмяРасширения, "")
            )
            ПутиКФайламРасширений.Вставить(ИмяРасширения, ПутьКФайламПроекта)
        ;

        пер ПутьКВременнымФайламСтрокой = ПользовательскиеНастройки.TEMP
        если не oc_main.ЭтоАбсолютныйПуть(ПутьКВременнымФайламСтрокой)
            ПутьКВременнымФайламСтрокой = oc_main.ДобавитьЧастьПути(РабочийКаталог, [ПутьКВременнымФайламСтрокой])
        ;

        знч ПутьКВременнымФайлам = новый ПутьКФайламПроекта(
            "",
            ПутьКВременнымФайламСтрокой,
            ПользовательскиеНастройки.TEMP,
            Ложь,
            "")

        Консоль.Записать("ИсполняемыйФайлПлатформы: %{Настройки.PLATFORM_VERSION}")

        знч ПутьКФайламПлатформы = oc_main.ПутьКФайламПлатформы(Настройки.PLATFORM_VERSION, ПользовательскиеНастройки.PATH_1C)
        знч ПутьКФайламПлатформыИБ = ПользовательскиеНастройки.IB_PLATFORM_VERSION.Пусто()
            ? ПутьКФайламПлатформы
            : oc_main.ПутьКФайламПлатформы(ПользовательскиеНастройки.IB_PLATFORM_VERSION, ПользовательскиеНастройки.PATH_1C)

        знч ПараметрыСоединенияИБ = новый ПараметрыСоединенияИБ(
            ПользовательскиеНастройки.IB_CONNECTION_STRING,
            ПользовательскиеНастройки.IB_PLATFORM_VERSION,
            ПутьКФайламПлатформыИБ,
            ПользовательскиеНастройки.IB_LOGIN,
            ПользовательскиеНастройки.IB_PASSWD)

        знч ПараметрыПроекта = новый ПараметрыПроекта(
            РабочийКаталог,
            ПутьКСкриптуИсполнения,
            ПутьКСборкеПроекта,
            ПутьКФайламКонфигурации,
            IConfiguration.ПолучитьФайлConfigDumpInfo(ПутьКВременнымФайлам.Путь),
            ПутьКФайламКонфигурацииПоставщика,
            ПутьКВременнымФайлам,
            ПутиКФайламРасширений,
            РежимыСборкиПроекта.Элементы()[ПользовательскиеНастройки.CFE_BUILD_MODE - 1],
            oc_main.РежимыИсполнения.Элементы()[ПользовательскиеНастройки.EXEC_MODE - 1],
            oc_main.РежимыИсполнения.Элементы()[ПользовательскиеНастройки.CFE_EXEC_MODE - 1],
            ПутьКФайламПлатформы,
            ПараметрыСоединенияИБ,
            Проверки)

        возврат ПараметрыПроекта
    ;

    @Глобально
    статический метод Записать(ПутьКНастройкам: Строка, ПараметрыПроекта: ПараметрыПроекта)

        ПользовательскиеНастройки.Записать(ПутьКНастройкам, ПараметрыПроекта)
    ;
;