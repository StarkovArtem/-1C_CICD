#!/usr/bin/executor

#требуется oc_main.sbsl

@Глобально
конст ИМЯ_ФАЙЛА_НАСТРОЕК = "project_config.json"
@Глобально
конст ИМЯ_ФАЙЛА_ПОЛЬЗ_НАСТРОЕК = "project_user_prop.json" // файл пользовательских настроек в каталоге BIN_DIR
@Глобально
конст ИМЯ_ПАТЧА          = "cf_patch"
@Глобально
конст ИМЯ_КОНФИГУРАЦИИ   = "cf"

@Глобально
структура Настройки
    знч EXT_NAMES: Массив<Строка> // имена расширений
    знч BIN_DIR: Строка           // каталог, в котором соберутся файлы cf и cfe
    знч SRC_CF: Строка            // каталог выгрузки файлов конфигурации в формате xml 
    знч SRC_CFE: Строка           // каталог выгрузки файлов расширений в формате xml
    знч PLATFORM_VERSION: Строка  // версия платформы  
;

@Глобально
структура ПользовательскиеНастройки
    пер HASH: Соответствие<Строка, Строка>
    знч IB_CONNECTION_STRING: Строка
    пер IB_LOGIN: Строка
    пер IB_PASSWD: Строка
    знч USE_IBCMD: Булево          // использовать автономный сервер
;

@Глобально
структура ПараметрыСоединенияИБ
    пер СтрокаСоединения: Строка
    пер Логин: Строка
    пер Пароль: Строка
;

@Глобально
структура ПутьКФайламПроекта
    знч Имя: Строка
    знч Путь: Строка
    знч ЭтоРасширение: Булево
    пер Хеш: Строка
;

@Глобально
структура ПараметрыПроекта
    знч РабочийКаталог: Строка                              // рабочий каталог выполнения скрипта
    знч ПутьКСборкеПроекта: Строка                          // путь к собранным файлам проекта
    знч ПутьКФайламКонфигурации: ПутьКФайламПроекта        // пути к исходным файлам конфигурации проекта
    знч Расширения: Соответствие<Строка, ПутьКФайламПроекта> // пути к исходным файлам расширений проекта
    знч ИсполняемыйФайлПлатформы: Строка                    // путь к исполняемому файлу платформы
    знч ИспользуетсяАвтономныйСервер: Булево                // признак использования автономного сервера
    знч ПараметрыСоединенияИБ: ПараметрыСоединенияИБ
;

@Глобально
метод СоздатьФайлСНастройками(ВерсияПлатформы: Строка) : Булево
    
    знч СР = Файлы.СимволРазделителя
    пер ФайлНастроек = новый Файл(ИМЯ_ФАЙЛА_НАСТРОЕК)
    знч Настройки = новый Настройки(
        {""}.ВМассив(),
        "bin",
        "src%{СР}cf",
        "src%{СР}cfe",
        "%{ВерсияПлатформы}"
    )

    исп ПотокЗаписи = ФайлНастроек.ОткрытьПотокЗаписи()
    СериализацияJson.ЗаписатьОбъект(ПотокЗаписи, Настройки)
    ПотокЗаписи.Закрыть()

    возврат Истина
;

@Глобально
метод ЗаписатьФайлСПользовательскимиНастройками(ПараметрыПроекта: ПараметрыПроекта) : Булево

    знч СР = Файлы.СимволРазделителя
   
    знч Хеши = новый Соответствие<Строка, Строка>()
    Хеши.Вставить(ИМЯ_КОНФИГУРАЦИИ, ПараметрыПроекта.ПутьКФайламКонфигурации.Хеш)
    для Расширение из ПараметрыПроекта.Расширения
        Хеши.Вставить(Расширение.Ключ, Расширение.Значение.Хеш)
    ;

    знч ПользовательскиеНастройки = новый ПользовательскиеНастройки(
        Хеши,
        ПараметрыПроекта.ПараметрыСоединенияИБ.СтрокаСоединения,
        ПараметрыПроекта.ПараметрыСоединенияИБ.Логин,
        ПараметрыПроекта.ПараметрыСоединенияИБ.Пароль
    )

    исп ПотокЗаписи = новый Файл("%{ПараметрыПроекта.ПутьКСборкеПроекта}%{СР}%ИМЯ_ФАЙЛА_ПОЛЬЗ_НАСТРОЕК").ОткрытьПотокЗаписи()
    СериализацияJson.ЗаписатьОбъект(ПотокЗаписи, ПользовательскиеНастройки)
    ПотокЗаписи.Закрыть()

    возврат Истина

; 

@Глобально
метод ПрочитатьНастройки(): Настройки

    пер ФайлНастроек = новый Файл(ИМЯ_ФАЙЛА_НАСТРОЕК)
    если не ФайлНастроек.Существует()
        СоздатьФайлСНастройками("")
    ;
    исп ПотокЧтения = ФайлНастроек.ОткрытьПотокЧтения()
    знч ПрочитанныеНастройки = СериализацияJson.ПрочитатьОбъект(ПотокЧтения, Тип<Настройки>)
    ПотокЧтения.Закрыть()

    возврат ПрочитанныеНастройки 
;

@Глобально
метод ПрочитатьПользовательскиеНастройки(Путь: Строка, ВвестиЛогинПароль = Ложь): ПользовательскиеНастройки
    
    знч СР = Файлы.СимволРазделителя
    знч ФайлНастроек = новый Файл("%{Путь}%{СР}%ИМЯ_ФАЙЛА_ПОЛЬЗ_НАСТРОЕК")
    пер ПользовательскиеНастройки = новый ПользовательскиеНастройки()
    если не ФайлНастроек.Существует()
        Файлы.СоздатьКаталог("%{Путь}")
        исп ПотокЗаписи = ФайлНастроек.ОткрытьПотокЗаписи()
        СериализацияJson.ЗаписатьОбъект(ПотокЗаписи, ПользовательскиеНастройки)
        ПотокЗаписи.Закрыть()
    иначе
        исп ПотокЧтения = ФайлНастроек.ОткрытьПотокЧтения()
        ПользовательскиеНастройки = СериализацияJson.ПрочитатьОбъект(ПотокЧтения, Тип<ПользовательскиеНастройки>)
        ПотокЧтения.Закрыть()
    ;

    если ВвестиЛогинПароль и не ПользовательскиеНастройки.IB_CONNECTION_STRING.Пусто() и ПользовательскиеНастройки.IB_LOGIN.Пусто()
        ПользовательскиеНастройки.IB_LOGIN = Консоль.СчитатьСтроку("Введите логин:\н")
    ;

    если ВвестиЛогинПароль и не ПользовательскиеНастройки.IB_LOGIN.Пусто() и ПользовательскиеНастройки.IB_PASSWD.Пусто()
        ПользовательскиеНастройки.IB_PASSWD = Консоль.СчитатьПароль("Введите пароль:\н")
    ;

    возврат ПользовательскиеНастройки
;

@Глобально
метод ИнициализироватьПараметрыПроекта(ВвестиЛогинПароль = Ложь) : ПараметрыПроекта

    знч СР = Файлы.СимволРазделителя
    
    знч Настройки = ПрочитатьНастройки()
    знч РабочийКаталог = Скрипт.ПолучитьРабочийКаталог()
    пер ПутьКСборкеПроекта = РабочийКаталог + СР + Настройки.BIN_DIR
    ПутьКСборкеПроекта = ПутьКСборкеПроекта.Заменить("\\", СР)
    ПутьКСборкеПроекта = ПутьКСборкеПроекта.Заменить("/", СР)

    знч ПользовательскиеНастройки = ПрочитатьПользовательскиеНастройки(ПутьКСборкеПроекта, ВвестиЛогинПароль)
    
    пер ПутьКФайламКонфигурацииСтрокой = ""
    если не Настройки.SRC_CF.Пусто() 
        ПутьКФайламКонфигурацииСтрокой = РабочийКаталог + СР + Настройки.SRC_CF
        ПутьКФайламКонфигурацииСтрокой = ПутьКФайламКонфигурацииСтрокой.Заменить("\\", СР)
        ПутьКФайламКонфигурацииСтрокой = ПутьКФайламКонфигурацииСтрокой.Заменить("/", СР)
    ;
    знч ПутьКФайламКонфигурации = новый ПутьКФайламПроекта(
        "",
        ПутьКФайламКонфигурацииСтрокой,
        Ложь,
        ПользовательскиеНастройки.HASH.ПолучитьИлиУмолчание(ИМЯ_КОНФИГУРАЦИИ, ""))

    знч ПутиКФайламРасширений = новый Соответствие<Строка, ПутьКФайламПроекта>()
    если не Настройки.SRC_CFE.Пусто() 
        пер ПутьКФайламРасширенийСтрокой = РабочийКаталог + СР + Настройки.SRC_CFE
        ПутьКФайламРасширенийСтрокой = ПутьКФайламРасширенийСтрокой.Заменить("\\", СР)
        ПутьКФайламРасширенийСтрокой = ПутьКФайламРасширенийСтрокой.Заменить("/", СР)
        для ИмяРасширения из Настройки.EXT_NAMES
            если ИмяРасширения == ИМЯ_КОНФИГУРАЦИИ
                или ИмяРасширения == ИМЯ_ПАТЧА
                продолжить
            ;
            знч ПутьКФайламПроекта = новый ПутьКФайламПроекта(
                ИмяРасширения,
                ПутьКФайламРасширенийСтрокой + СР + ИмяРасширения,
                Истина,
                ПользовательскиеНастройки.HASH.ПолучитьИлиУмолчание(ИмяРасширения, "")
            )
            ПутиКФайламРасширений.Вставить(ИмяРасширения, ПутьКФайламПроекта)
        ;
    ;

    знч ПараметрыСоединенияИБ = новый ПараметрыСоединенияИБ(
        ПользовательскиеНастройки.IB_CONNECTION_STRING,
        ПользовательскиеНастройки.IB_LOGIN,
        ПользовательскиеНастройки.IB_PASSWD)

    Консоль.Записать("ИсполняемыйФайлПлатформы: %{Настройки.PLATFORM_VERSION}")

    знч ИсполняемыйФайлПлатформы = oc_main.ИсполняемыйФайлПлатформы(Настройки.PLATFORM_VERSION, ПользовательскиеНастройки.USE_IBCMD)

    знч ПараметрыПроекта = новый ПараметрыПроекта(
        РабочийКаталог,
        ПутьКСборкеПроекта,
        ПутьКФайламКонфигурации,
        ПутиКФайламРасширений,
        ИсполняемыйФайлПлатформы,
        ПользовательскиеНастройки.USE_IBCMD,
        ПараметрыСоединенияИБ)
    
    возврат ПараметрыПроекта
;

@Глобально
метод РассчитатьХешКаталога(ПутьКФайламПроекта: Строка): Строка

    знч НастройкиПоискаФайлов = новый НастройкиПоискаФайлов()
    НастройкиПоискаФайлов.ИсключитьКаталоги(Истина)
    НастройкиПоискаФайлов.ИсключитьСсылки(Истина)
    пер ФайлыПроекта = Файлы.Найти(ПутьКФайламПроекта, НастройкиПоискаФайлов)

    пер ХешированиеДанных = новый ХешированиеДанных(АлгоритмХеширования.Md5)
    для Файл из ФайлыПроекта
        знч ПотокЧтения = Файл.ОткрытьПотокЧтения()
        ХешированиеДанных.ДобавитьДанные(ПотокЧтения)
        ПотокЧтения.Закрыть()
    ;

    знч ХешПроекта = ХешированиеДанных.Результат.ВСтроку()

    возврат ХешПроекта

;