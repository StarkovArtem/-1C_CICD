#!/usr/bin/executor

#требуется lib/IProjectProperties.sbsl
#требуется lib/IConfiguration.sbsl
#требуется lib/IProject.sbsl
#требуется lib/oc_main.sbsl

метод Скрипт(Режим: Строка, ПутьДоРепозитория: Строка, Пауза: Число, ПутьКНастройкам = "")

    пер СтатусВыполнения = Ложь

    если ПутьДоРепозитория.Пусто()
        если Пауза > 0
            Консоль.СчитатьСтроку("Не задан путь до репозитория. Нажмите Enter...")
        ;
        выбросить новый ИсключениеНедопустимоеСостояние()
    ;

    ПутьДоРепозитория = oc_main.ИсправитьРазделителиПути(ПутьДоРепозитория)
    ПутьКНастройкам   = oc_main.ИсправитьРазделителиПути(ПутьКНастройкам)
    знч РабочийКаталог    = Скрипт.ПолучитьРабочийКаталог()

    // проверяем абсолютный или относительный путь
    если oc_main.ЭтоАбсолютныйПуть(ПутьДоРепозитория)
        Скрипт.УстановитьРабочийКаталог(ПутьДоРепозитория)
    иначе
        Скрипт.УстановитьРабочийКаталог(oc_main.ДобавитьЧастьПути(РабочийКаталог, [ПутьДоРепозитория]))
    ;

    пер ПараметрыПроекта: IProjectProperties.ПараметрыПроекта

    попытка

        ПараметрыПроекта = IProjectProperties.ПараметрыПроекта.Инициализировать(ПутьКНастройкам, Режим.Содержит("_ib_"))

        выбор Режим.ВНижнийРегистр()
        когда "init"
            ИнициализироватьСкриптыВыполнения(ПараметрыПроекта, ПутьДоРепозитория, ПутьКНастройкам)
            ИнициализироватьGitPrecommit(ПараметрыПроекта, ПутьКНастройкам)
            СтатусВыполнения = Истина
        когда "check_bin"
            СтатусВыполнения = IProject.АнализироватьНастройкиПоддержки(ПараметрыПроекта)
        когда "repair_bin"
            СтатусВыполнения = IProject.АнализироватьНастройкиПоддержки(ПараметрыПроекта, Истина)
        когда "check_bin_prod"
            СтатусВыполнения = IProject.АнализироватьНастройкиПоддержки(ПараметрыПроекта, Ложь, Истина)
        когда "repair_bin_prod"
            СтатусВыполнения = IProject.АнализироватьНастройкиПоддержки(ПараметрыПроекта, Истина, Истина)
        когда "new_bin"
            IProject.ПеревестиФайлИзмененныхОбъектовВНовыйФормат(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь)
            СтатусВыполнения = Истина
        когда "new_configdumpinfo"
            IProject.ПеревестиФайлИсторииОбъектовВНовыйФормат(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь)
            СтатусВыполнения = Истина
            для Расширение из ПараметрыПроекта.Расширения
                IProject.ПеревестиФайлИсторииОбъектовВНовыйФормат(Расширение.Значение.Путь)
            ;
        когда "check_ib_cf"
            СтатусВыполнения = IProject.ВыполнитьПроверкуКонфигурации(ПараметрыПроекта)
        когда "check_ib_cfe"
            СтатусВыполнения = IProject.ВыполнитьПроверкуКонфигурации(ПараметрыПроекта, "AllExtensions")
        когда "get_ib_configdumpinfo"
            СтатусВыполнения = IProject.ПолучитьФайлыКонфигурации(ПараметрыПроекта, Ложь, 2)
        когда "get_prod_configdumpinfo"
            СтатусВыполнения = IProject.ПолучитьФайлыКонфигурации(ПараметрыПроекта, Истина, 2)
        когда "get_ib_status"
            СтатусВыполнения = IProject.ПолучитьСтатусКонфигурации(ПараметрыПроекта)
        когда "get_ib_xml"
            СтатусВыполнения = IProject.ПолучитьФайлыКонфигурации(ПараметрыПроекта)
        когда "get_prod_xml"
            СтатусВыполнения = IProject.ПолучитьФайлыКонфигурации(ПараметрыПроекта, Истина)
        когда "update_ib_cf"
            СтатусВыполнения = IProject.СобратьФайлыКонфигурации(ПараметрыПроекта)
            СтатусВыполнения = СтатусВыполнения и IProject.ОбновитьФайлыКонфигурации(ПараметрыПроекта, 1, Истина)
        когда "update_ib_cf_xml"
            СтатусВыполнения = IProject.ОбновитьФайлыКонфигурации(ПараметрыПроекта, 2, Истина)
        когда "update_ib_cfe"
            СтатусВыполнения = IProject.СобратьФайлыКонфигурации(ПараметрыПроекта, Истина)
            СтатусВыполнения = СтатусВыполнения и IProject.ОбновитьФайлыКонфигурации(ПараметрыПроекта, 3)
        когда "update_ib_cfe_xml"
            СтатусВыполнения = IProject.ОбновитьФайлыКонфигурации(ПараметрыПроекта, 4)
        когда "update_ib_patch"
            знч РезультатСборки = IProject.СобратьПатчКонфигурации(ПараметрыПроекта, ПараметрыПроекта.ПараметрыСоединенияИБ)
            СтатусВыполнения = (РезультатСборки != Неопределено) и IProject.ОбновитьФайлыКонфигурации(ПараметрыПроекта, 5, Истина)
        когда "build_cf"
            СтатусВыполнения = IProject.СобратьФайлыКонфигурации(ПараметрыПроекта)
        когда "build_cfe"
            СтатусВыполнения = IProject.СобратьФайлыКонфигурации(ПараметрыПроекта, Истина)
        когда "build_patch"
            СтатусВыполнения = IProject.СобратьПатчКонфигурации(ПараметрыПроекта) != Неопределено
        когда "build_prod"
            СтатусВыполнения = IProject.СобратьФайлыКонфигурации(ПараметрыПроекта, Ложь, Истина)
        иначе
            Консоль.Записать(
                "Неизвестный режим запуска %Режим\н")
            если Пауза > 0
                Консоль.СчитатьСтроку("Нажмите Enter...")
            ;
            выбросить новый ИсключениеНедопустимоеСостояние()
        ;

    поймать Исключение: Исключение
        если не Исключение.Описание.Пусто()
            Консоль.Записать("\н#################################################################")
            Консоль.Записать(Исключение.Описание)
            Консоль.Записать("#################################################################")
        ;
    ;

    если не ПараметрыПроекта.РабочийКаталог.Пусто()
        IProjectProperties.ПараметрыПроекта.Записать(ПутьКНастройкам, ПараметрыПроекта)
    ;

    если СтатусВыполнения
        если Режим == "init"
            Консоль.СчитатьСтроку("\нИнициализация закончена. Нажмите Enter...")
        иначе если Пауза > 0
            Консоль.СчитатьСтроку("\нКонвертация закончена. Нажмите Enter...")
        иначе
            Консоль.Записать("\нКонвертация закончена")
        ;
    иначе
        если Пауза > 0
            Консоль.СчитатьСтроку("\нОшибка конвертации. Нажмите Enter...")
        иначе
            Консоль.Записать("\нОшибка конвертации")
        ;
        выбросить новый ИсключениеНедопустимоеСостояние()
    ;
;

метод ИнициализироватьСкриптыВыполнения(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта, ПутьДоРепозитория: Строка, ПутьКНастройкам: Строка)

    знч используемаяОС = oc_main.ИспользуемаяОС()

    пер Расширение = ""
    пер Шебанг = ""
    пер Кодировка = ""
    выбор используемаяОС
    когда oc_main.ОперационныеСистемы.Windows
        Расширение = "bat"
        Кодировка = "chcp 65001\н"
    когда oc_main.ОперационныеСистемы.Linux
        Расширение = "sh"
        Шебанг = "#!/usr/bin/bash\н"
    ;

    знч КомандыЗапуска = [
        "check_ib_cf",
        "check_ib_cfe",
        "build_cf",
        "build_prod",
        "build_cfe",
        "build_patch",
        "get_ib_configdumpinfo",
        "get_ib_xml",
        "get_ib_status",
        "update_ib_cf",
        "update_ib_cf_xml",
        "update_ib_cfe",
        "update_ib_cfe_xml",
        "update_ib_patch"
    ]

    пер ПутьКСкриптуИсполненияПараметр = ПараметрыПроекта.ПутьКСкриптуИсполнения.ОтносительныйПуть
    если не oc_main.ЭтоАбсолютныйПуть(ПутьКСкриптуИсполненияПараметр)
        ПутьКСкриптуИсполненияПараметр = oc_main.ДобавитьЧастьПути(ПутьДоРепозитория, [ПутьКСкриптуИсполненияПараметр])
    ;
    ПутьКСкриптуИсполненияПараметр = "\"" + ПутьКСкриптуИсполненияПараметр + "\""

    знч СР = Файлы.СимволРазделителя
    знч ПутьДоРепозиторияПараметр = "\"" + ((СР == "\\") ? ПутьДоРепозитория.Заменить(СР, "\\\\") : ПутьДоРепозитория) + "\""
    знч ПутьКНастройкамПараметр = ПутьКНастройкам.Пусто()
        ? ""
        : "\"" + ((СР == "\\") ? ПутьКНастройкам.Заменить(СР, "\\\\") : ПутьКНастройкам) + "\""

    для Команда из КомандыЗапуска
        знч ФайлСкрипта = новый Файл(oc_main.ДобавитьЧастьПути(ПараметрыПроекта.ПутьКСборкеПроекта.Путь, ["%{Команда}.%{Расширение}"]))
        ФайлСкрипта.ОткрытьПотокЗаписи(Ложь)
            .Записать(Шебанг)
            .Записать(Кодировка)
            .Записать("executor %{ПутьКСкриптуИсполненияПараметр} %{Команда} %{ПутьДоРепозиторияПараметр} 1 %{ПутьКНастройкамПараметр}").Закрыть()
    ;
;

метод ИнициализироватьGitPrecommit(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта, ПутьКНастройкам: Строка)

    знч КаталогHooks = новый Файл(oc_main.ДобавитьЧастьПути(".git", ["hooks"]))
    если не КаталогHooks.Существует()
        Консоль.Записать("\н#################################################################")
        Консоль.Записать("Не найдены системные файлы git репозитория \"${КаталогHooks.Путь}\"")
        Консоль.Записать("#################################################################")
        возврат
    ;

    знч СР = Файлы.СимволРазделителя
    знч СРLinux = "/"

    знч ПутьКСкриптуИсполненияПараметр = "\"" + ПараметрыПроекта.ПутьКСкриптуИсполнения.ОтносительныйПуть.Заменить(СР, СРLinux) + "\""
    знч ПутьКНастройкамПараметр = ПутьКНастройкам.Пусто()
        ? ""
        : "\"" + ПутьКНастройкам.Заменить(СР, СРLinux) + "\""

    знч РабочийКаталог    = Скрипт.ПолучитьРабочийКаталог()
    знч ФайлConfigDumpInfo = IConfiguration.ПолучитьФайлConfigDumpInfo(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь)
    знч ОтносительныйПутьConfigDumpInfo = oc_main.УдалитьЧастьПути(ФайлConfigDumpInfo.Путь, [РабочийКаталог]).Заменить(СР, СРLinux)
    знч ФайлParentConfigurations = IConfiguration.ПолучитьФайлParentConfigurations(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь)
    знч ОтносительныйПутьParentConfigurations = oc_main.УдалитьЧастьПути(ФайлParentConfigurations.Путь, [РабочийКаталог]).Заменить(СР, СРLinux)
    пер ОтносительныйПутьConfigDumpInfoРасширений = ""
    для Расширение из ПараметрыПроекта.Расширения
        ОтносительныйПутьConfigDumpInfoРасширений = Расширение.Значение.ОтносительныйПуть
        ОтносительныйПутьConfigDumpInfoРасширений = oc_main.ДобавитьЧастьПути(
             ОтносительныйПутьConfigDumpInfoРасширений.Заменить(Расширение.Ключ, "*"),
             [ФайлConfigDumpInfo.Имя]).Заменить(СР, СРLinux)
        прервать
    ;

    знч ТекстPrecommit =
        "#!/bin/sh
        executor %{ПутьКСкриптуИсполненияПараметр} new_bin \".\" 0 %{ПутьКНастройкамПараметр}
        executor %{ПутьКСкриптуИсполненияПараметр} new_configdumpinfo \".\" 0 %{ПутьКНастройкамПараметр}
        git add  %{ОтносительныйПутьParentConfigurations} %{ОтносительныйПутьConfigDumpInfo} %{ОтносительныйПутьConfigDumpInfoРасширений}
        executor %{ПутьКСкриптуИсполненияПараметр} build_cfe \".\" 0  %{ПутьКНастройкамПараметр}"

    знч ФайлPrecommit = новый Файл(oc_main.ДобавитьЧастьПути(".git", ["hooks", "pre-commit"]))
    если ФайлPrecommit.Существует()
        Консоль.Записать("\н#################################################################")
        Консоль.Записать("Файл \"%{ФайлPrecommit.Путь}\" существует. Необходимо внести в него следующие строки:")
        Консоль.Записать("\н")
        Консоль.Записать(ТекстPrecommit)
        Консоль.Записать("\н")
        Консоль.Записать("#################################################################")
        возврат
    ;

    ФайлPrecommit.ОткрытьПотокЗаписи().Записать(ТекстPrecommit).Закрыть()
;