#!/usr/bin/executor

#требуется lib/IProjectProperties.sbsl
#требуется lib/IProjectOperation.sbsl
#требуется lib/oc_main.sbsl

метод Скрипт(Режим: Строка, ПутьДоРепозитория: Строка, Пауза: Число)

    пер СтатусВыполнения = Ложь
    знч СР = Файлы.СимволРазделителя

    если ПутьДоРепозитория.Пусто()
        если Пауза > 0
            Консоль.СчитатьСтроку("Не задан путь до репозитрия. Нажмите Enter...")
        ;
        выбросить новый ИсключениеНедопустимоеСостояние()
    ;

    ПутьДоРепозитория = ПутьДоРепозитория.Заменить("/", СР)
    ПутьДоРепозитория = ПутьДоРепозитория.Заменить("\\", СР)

    Скрипт.УстановитьРабочийКаталог(Скрипт.ПолучитьРабочийКаталог() + СР + ПутьДоРепозитория)

    если Режим == "init"
        знч ПараметрыПроекта = IProjectProperties.ИнициализироватьПараметрыПроекта()
        ИнициализироватьСкриптыВыполнения(ПараметрыПроекта)
        возврат
    ;

    попытка

        знч ПараметрыПроекта = IProjectProperties.ИнициализироватьПараметрыПроекта()

        выбор Режим.ВНижнийРегистр()
        когда "check_bin"
            СтатусВыполнения = IProjectOperation.АнализироватьСписокИзмененныхОбъектов(ПараметрыПроекта, 1)
        когда "reapair_bin"
            СтатусВыполнения = IProjectOperation.АнализироватьСписокИзмененныхОбъектов(ПараметрыПроекта, 2)
        когда "new_bin"
            СтатусВыполнения = IProjectOperation.ПеревестиФайлИзмененныхОбъектовВНовыйФормат(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь)
        когда "new_configdumpinfo"
            СтатусВыполнения = IProjectOperation.ПеревестиФайлИсторииОбъектовВНовыйФормат(ПараметрыПроекта.ПутьКФайламКонфигурации.Путь)
            для Расширение из ПараметрыПроекта.Расширения
                СтатусВыполнения = СтатусВыполнения и IProjectOperation.ПеревестиФайлИсторииОбъектовВНовыйФормат(Расширение.Значение.Путь)
            ;
        когда "get_dumpconfig"
            СтатусВыполнения = IProjectOperation.ПолучитьФайлИсторииИзменений(ПараметрыПроекта)
        когда "get_prod_dumpconfig"
            СтатусВыполнения = IProjectOperation.ПолучитьФайлИсторииИзменений(ПараметрыПроекта, Истина)
        когда "update_ib_cf"
            СтатусВыполнения = IProjectOperation.СобратьФайлыКонфигурации(ПараметрыПроекта)
            СтатусВыполнения = СтатусВыполнения и IProjectOperation.ОбновитьФайлыКонфигурации(ПараметрыПроекта)
        когда "update_ib_patch"
            СтатусВыполнения = IProjectOperation.СобратьПатчКонфигурации(ПараметрыПроекта)
            СтатусВыполнения = СтатусВыполнения и IProjectOperation.ОбновитьФайлыКонфигурации(ПараметрыПроекта)
        когда "update_ib_cfe"
            СтатусВыполнения = IProjectOperation.СобратьФайлыКонфигурации(ПараметрыПроекта, Истина)
            СтатусВыполнения = СтатусВыполнения и IProjectOperation.ОбновитьФайлыКонфигурации(ПараметрыПроекта, Истина)
        когда "update_ib_test"
            СтатусВыполнения = IProjectOperation.ОбновитьФайлыКонфигурации(ПараметрыПроекта, Ложь, Истина)
        когда "build_cf"
            СтатусВыполнения = IProjectOperation.СобратьФайлыКонфигурации(ПараметрыПроекта)
        когда "build_cfe"
            СтатусВыполнения = IProjectOperation.СобратьФайлыКонфигурации(ПараметрыПроекта, Истина)
        когда "build_patch"
            СтатусВыполнения = IProjectOperation.СобратьПатчКонфигурации(ПараметрыПроекта)
        когда "build_prod"
            СтатусВыполнения = IProjectOperation.СобратьФайлыКонфигурации(ПараметрыПроекта, Ложь, Истина)
        иначе
            Консоль.Записать(
                "Неизвестный режим запуска %Режим\н")
            если Пауза > 0
                Консоль.СчитатьСтроку("Нажмите Enter...")
            ;
            выбросить новый ИсключениеНедопустимоеСостояние()
        ;

        IProjectProperties.ЗаписатьФайлСПользовательскимиНастройками(ПараметрыПроекта)

    поймать Исключение: Исключение
        если не Исключение.Описание.Пусто()
            Консоль.Записать("\н#################################################################")
            Консоль.Записать(Исключение.Описание)
            Консоль.Записать("#################################################################")
        ;
    ;

    если СтатусВыполнения
        если Пауза > 0
            Консоль.СчитатьСтроку("\нКонвертация закончена. Нажмите Enter...")
        иначе
            Консоль.Записать("\нКонвертация закончена")
        ;
    иначе
        если Пауза > 0
            Консоль.СчитатьСтроку("\нОшибка конвертации. Нажмите Enter...")
        иначе
            Консоль.Записать("\нОшибка конвертации")
        ;
        выбросить новый ИсключениеНедопустимоеСостояние()
    ;
;

метод ИнициализироватьСкриптыВыполнения(ПараметрыПроекта: IProjectProperties.ПараметрыПроекта)

    знч СР = Файлы.СимволРазделителя
    знч ПутьДоСкрипта = Скрипт.ПутьНачальногоСкрипта.Заменить(Скрипт.ПолучитьРабочийКаталог(), "")
    знч ПутьДоСборки = ПараметрыПроекта.ПутьКСборкеПроекта.Заменить(Скрипт.ПолучитьРабочийКаталог(), "")
    знч КоличествоУровней = ПутьДоСборки.КоличествоВхождений(СР)
    пер ПутьДоРепозитория = ""
    для индек = 1 по КоличествоУровней
        ПутьДоРепозитория = ПутьДоРепозитория + ".." + СР
    ;
    если ПутьДоРепозитория.Пусто()
        ПутьДоРепозитория = "."
    ;

    знч используемаяОС = oc_main.ИспользуемаяОС()

    пер Расширение = ""
    пер Шебанг = ""
    выбор используемаяОС
    когда oc_main.ОперационныеСистемы.Windows
        Расширение = "bat"
        ПутьДоРепозитория = ПутьДоРепозитория.Заменить("\\", "\\\\")
    когда oc_main.ОперационныеСистемы.Linux
        Расширение = "sh"
        Шебанг = "#!/usr/bin/bash"
    ;

    пер ФайлСкрипта = новый Файл(ПараметрыПроекта.ПутьКСборкеПроекта + СР + "build_cf.%{Расширение}")
    ФайлСкрипта.ОткрытьПотокЗаписи(Ложь).Записать(Шебанг).Записать("executor ..%{ПутьДоСкрипта} build_cf \"%{ПутьДоРепозитория}\" 1").Закрыть()

    ФайлСкрипта = новый Файл(ПараметрыПроекта.ПутьКСборкеПроекта + СР + "build_cfe.%{Расширение}")
    ФайлСкрипта.ОткрытьПотокЗаписи(Ложь).Записать(Шебанг).Записать("executor ..%{ПутьДоСкрипта} build_cfe \"%{ПутьДоРепозитория}\" 1").Закрыть()

    ФайлСкрипта = новый Файл(ПараметрыПроекта.ПутьКСборкеПроекта + СР + "build_patch.%{Расширение}")
    ФайлСкрипта.ОткрытьПотокЗаписи(Ложь).Записать(Шебанг).Записать("executor ..%{ПутьДоСкрипта} build_patch \"%{ПутьДоРепозитория}\" 1").Закрыть()

    ФайлСкрипта = новый Файл(ПараметрыПроекта.ПутьКСборкеПроекта + СР + "get_dumpconfig.%{Расширение}")
    ФайлСкрипта.ОткрытьПотокЗаписи(Ложь).Записать(Шебанг).Записать("executor ..%{ПутьДоСкрипта} get_dumpconfig \"%{ПутьДоРепозитория}\" 1").Закрыть()

    ФайлСкрипта = новый Файл(ПараметрыПроекта.ПутьКСборкеПроекта + СР + "update_ib_cfe.%{Расширение}")
    ФайлСкрипта.ОткрытьПотокЗаписи(Ложь).Записать(Шебанг).Записать("executor ..%{ПутьДоСкрипта} update_ib_cfe \"%{ПутьДоРепозитория}\" 1").Закрыть()

    ФайлСкрипта = новый Файл(ПараметрыПроекта.ПутьКСборкеПроекта + СР + "update_ib_patch.%{Расширение}")
    ФайлСкрипта.ОткрытьПотокЗаписи(Ложь).Записать(Шебанг).Записать("executor ..%{ПутьДоСкрипта} update_ib_patch \"%{ПутьДоРепозитория}\" 1").Закрыть()

;